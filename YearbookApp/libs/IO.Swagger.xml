<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IO.Swagger</name>
    </assembly>
    <members>
        <member name="T:IO.Swagger.Api.IActivitiesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.CreateActivity(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity
            </summary>
            <remarks>
            Creates a manual activity for an athlete, requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.CreateActivityWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity
            </summary>
            <remarks>
            Creates a manual activity for an athlete, requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>ApiResponse of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetActivityById(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity
            </summary>
            <remarks>
            Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetActivityByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity
            </summary>
            <remarks>
            Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>ApiResponse of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetCommentsByActivityId(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments
            </summary>
            <remarks>
            Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>List&lt;Comment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetCommentsByActivityIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments
            </summary>
            <remarks>
            Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>ApiResponse of List&lt;Comment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetKudoersByActivityId(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers
            </summary>
            <remarks>
            Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetKudoersByActivityIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers
            </summary>
            <remarks>
            Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLapsByActivityId(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps
            </summary>
            <remarks>
            Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>List&lt;Lap&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLapsByActivityIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps
            </summary>
            <remarks>
            Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>ApiResponse of List&lt;Lap&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLoggedInAthleteActivities(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities
            </summary>
            <remarks>
            Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLoggedInAthleteActivitiesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities
            </summary>
            <remarks>
            Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetZonesByActivityId(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones
            </summary>
            <remarks>
            Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>List&lt;ActivityZone&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetZonesByActivityIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones
            </summary>
            <remarks>
            Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>ApiResponse of List&lt;ActivityZone&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.UpdateActivityById(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity
            </summary>
            <remarks>
            Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.UpdateActivityByIdWithHttpInfo(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity
            </summary>
            <remarks>
            Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.CreateActivityAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity
            </summary>
            <remarks>
            Creates a manual activity for an athlete, requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>Task of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.CreateActivityAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity
            </summary>
            <remarks>
            Creates a manual activity for an athlete, requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>Task of ApiResponse (DetailedActivity)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetActivityByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity
            </summary>
            <remarks>
            Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>Task of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetActivityByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity
            </summary>
            <remarks>
            Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>Task of ApiResponse (DetailedActivity)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetCommentsByActivityIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments
            </summary>
            <remarks>
            Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>Task of List&lt;Comment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetCommentsByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments
            </summary>
            <remarks>
            Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>Task of ApiResponse (List&lt;Comment&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetKudoersByActivityIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers
            </summary>
            <remarks>
            Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetKudoersByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers
            </summary>
            <remarks>
            Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryAthlete&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLapsByActivityIdAsync(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps
            </summary>
            <remarks>
            Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of List&lt;Lap&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLapsByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps
            </summary>
            <remarks>
            Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of ApiResponse (List&lt;Lap&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLoggedInAthleteActivitiesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities
            </summary>
            <remarks>
            Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetLoggedInAthleteActivitiesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities
            </summary>
            <remarks>
            Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryActivity&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetZonesByActivityIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones
            </summary>
            <remarks>
            Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of List&lt;ActivityZone&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.GetZonesByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones
            </summary>
            <remarks>
            Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of ApiResponse (List&lt;ActivityZone&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.UpdateActivityByIdAsync(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity
            </summary>
            <remarks>
            Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>Task of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivitiesApi.UpdateActivityByIdAsyncWithHttpInfo(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity
            </summary>
            <remarks>
            Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (DetailedActivity)</returns>
        </member>
        <member name="T:IO.Swagger.Api.ActivitiesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ActivitiesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ActivitiesApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ActivitiesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.CreateActivity(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity Creates a manual activity for an athlete, requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.CreateActivityWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity Creates a manual activity for an athlete, requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>ApiResponse of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.CreateActivityAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity Creates a manual activity for an athlete, requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>Task of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.CreateActivityAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an Activity Creates a manual activity for an athlete, requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name"></param>
            <param name="type"></param>
            <param name="sportType"></param>
            <param name="startDateLocal"></param>
            <param name="elapsedTime"></param>
            <param name="description"></param>
            <param name="distance"></param>
            <param name="trainer"></param>
            <param name="commute"></param>
            <returns>Task of ApiResponse (DetailedActivity)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetActivityById(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetActivityByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>ApiResponse of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetActivityByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>Task of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetActivityByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="includeAllEfforts">To include all segments efforts. (optional)</param>
            <returns>Task of ApiResponse (DetailedActivity)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetCommentsByActivityId(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>List&lt;Comment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetCommentsByActivityIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>ApiResponse of List&lt;Comment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetCommentsByActivityIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>Task of List&lt;Comment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetCommentsByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            List Activity Comments Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Deprecated. Prefer to use after_cursor. (optional)</param>
            <param name="perPage">Deprecated. Prefer to use page_size. (optional, default to 30)</param>
            <param name="pageSize">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <param name="afterCursor">Cursor of the last item in the previous page of results, used to request the subsequent page of results.  When omitted, the first page of results is fetched. (optional)</param>
            <returns>Task of ApiResponse (List&lt;Comment&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetKudoersByActivityId(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetKudoersByActivityIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetKudoersByActivityIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetKudoersByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Activity Kudoers Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryAthlete&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLapsByActivityId(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>List&lt;Lap&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLapsByActivityIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>ApiResponse of List&lt;Lap&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLapsByActivityIdAsync(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of List&lt;Lap&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLapsByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            List Activity Laps Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of ApiResponse (List&lt;Lap&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLoggedInAthleteActivities(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLoggedInAthleteActivitiesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLoggedInAthleteActivitiesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetLoggedInAthleteActivitiesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Activities Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="before">An epoch timestamp to use for filtering activities that have taken place before a certain time. (optional)</param>
            <param name="after">An epoch timestamp to use for filtering activities that have taken place after a certain time. (optional)</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryActivity&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetZonesByActivityId(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>List&lt;ActivityZone&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetZonesByActivityIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>ApiResponse of List&lt;ActivityZone&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetZonesByActivityIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of List&lt;ActivityZone&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.GetZonesByActivityIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Activity Zones Summit Feature. Returns the zones of a given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <returns>Task of ApiResponse (List&lt;ActivityZone&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.UpdateActivityById(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.UpdateActivityByIdWithHttpInfo(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.UpdateActivityByIdAsync(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>Task of DetailedActivity</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivitiesApi.UpdateActivityByIdAsyncWithHttpInfo(System.Nullable{System.Int64},IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Update Activity Updates the given activity that is owned by the authenticated athlete. Requires activity:write. Also requires activity:read_all in order to update Only Me activities
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (DetailedActivity)</returns>
        </member>
        <member name="P:IO.Swagger.Api.ActivitiesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.ActivitiesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IAthletesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthlete">
            <summary>
            Get Authenticated Athlete
            </summary>
            <remarks>
            Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteWithHttpInfo">
            <summary>
            Get Authenticated Athlete
            </summary>
            <remarks>
            Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteZones">
            <summary>
            Get Zones
            </summary>
            <remarks>
            Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Zones</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteZonesWithHttpInfo">
            <summary>
            Get Zones
            </summary>
            <remarks>
            Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Zones</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetStats(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats
            </summary>
            <remarks>
            Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>ActivityStats</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetStatsWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats
            </summary>
            <remarks>
            Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>ApiResponse of ActivityStats</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.UpdateLoggedInAthlete(System.Nullable{System.Single})">
            <summary>
            Update Athlete
            </summary>
            <remarks>
            Update the currently authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.UpdateLoggedInAthleteWithHttpInfo(System.Nullable{System.Single})">
            <summary>
            Update Athlete
            </summary>
            <remarks>
            Update the currently authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>ApiResponse of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteAsync">
            <summary>
            Get Authenticated Athlete
            </summary>
            <remarks>
            Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteAsyncWithHttpInfo">
            <summary>
            Get Authenticated Athlete
            </summary>
            <remarks>
            Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (DetailedAthlete)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteZonesAsync">
            <summary>
            Get Zones
            </summary>
            <remarks>
            Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of Zones</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetLoggedInAthleteZonesAsyncWithHttpInfo">
            <summary>
            Get Zones
            </summary>
            <remarks>
            Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (Zones)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetStatsAsync(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats
            </summary>
            <remarks>
            Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>Task of ActivityStats</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.GetStatsAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats
            </summary>
            <remarks>
            Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>Task of ApiResponse (ActivityStats)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.UpdateLoggedInAthleteAsync(System.Nullable{System.Single})">
            <summary>
            Update Athlete
            </summary>
            <remarks>
            Update the currently authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>Task of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAthletesApi.UpdateLoggedInAthleteAsyncWithHttpInfo(System.Nullable{System.Single})">
            <summary>
            Update Athlete
            </summary>
            <remarks>
            Update the currently authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>Task of ApiResponse (DetailedAthlete)</returns>
        </member>
        <member name="T:IO.Swagger.Api.AthletesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.AthletesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.AthletesApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.AthletesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthlete">
            <summary>
            Get Authenticated Athlete Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteWithHttpInfo">
            <summary>
            Get Authenticated Athlete Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteAsync">
            <summary>
            Get Authenticated Athlete Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteAsyncWithHttpInfo">
            <summary>
            Get Authenticated Athlete Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (DetailedAthlete)</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteZones">
            <summary>
            Get Zones Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Zones</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteZonesWithHttpInfo">
            <summary>
            Get Zones Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Zones</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteZonesAsync">
            <summary>
            Get Zones Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of Zones</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetLoggedInAthleteZonesAsyncWithHttpInfo">
            <summary>
            Get Zones Returns the the authenticated athlete's heart rate and power zones. Requires profile:read_all.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (Zones)</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetStats(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>ActivityStats</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetStatsWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>ApiResponse of ActivityStats</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetStatsAsync(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>Task of ActivityStats</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.GetStatsAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Athlete Stats Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibilty.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the athlete. Must match the authenticated athlete.</param>
            <returns>Task of ApiResponse (ActivityStats)</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.UpdateLoggedInAthlete(System.Nullable{System.Single})">
            <summary>
            Update Athlete Update the currently authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.UpdateLoggedInAthleteWithHttpInfo(System.Nullable{System.Single})">
            <summary>
            Update Athlete Update the currently authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>ApiResponse of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.UpdateLoggedInAthleteAsync(System.Nullable{System.Single})">
            <summary>
            Update Athlete Update the currently authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>Task of DetailedAthlete</returns>
        </member>
        <member name="M:IO.Swagger.Api.AthletesApi.UpdateLoggedInAthleteAsyncWithHttpInfo(System.Nullable{System.Single})">
            <summary>
            Update Athlete Update the currently authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="weight">The weight of the athlete in kilograms.</param>
            <returns>Task of ApiResponse (DetailedAthlete)</returns>
        </member>
        <member name="P:IO.Swagger.Api.AthletesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.AthletesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IClubsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubActivitiesById(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities
            </summary>
            <remarks>
            Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubActivitiesByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities
            </summary>
            <remarks>
            Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubAdminsById(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators
            </summary>
            <remarks>
            Returns a list of the administrators of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubAdminsByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators
            </summary>
            <remarks>
            Returns a list of the administrators of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubById(System.Nullable{System.Int64})">
            <summary>
            Get Club
            </summary>
            <remarks>
            Returns a given club using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>DetailedClub</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Club
            </summary>
            <remarks>
            Returns a given club using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>ApiResponse of DetailedClub</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubMembersById(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members
            </summary>
            <remarks>
            Returns a list of the athletes who are members of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubMembersByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members
            </summary>
            <remarks>
            Returns a list of the athletes who are members of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetLoggedInAthleteClubs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs
            </summary>
            <remarks>
            Returns a list of the clubs whose membership includes the authenticated athlete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryClub&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetLoggedInAthleteClubsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs
            </summary>
            <remarks>
            Returns a list of the clubs whose membership includes the authenticated athlete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryClub&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubActivitiesByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities
            </summary>
            <remarks>
            Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubActivitiesByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities
            </summary>
            <remarks>
            Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryActivity&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubAdminsByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators
            </summary>
            <remarks>
            Returns a list of the administrators of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubAdminsByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators
            </summary>
            <remarks>
            Returns a list of the administrators of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryAthlete&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Club
            </summary>
            <remarks>
            Returns a given club using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>Task of DetailedClub</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Club
            </summary>
            <remarks>
            Returns a given club using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>Task of ApiResponse (DetailedClub)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubMembersByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members
            </summary>
            <remarks>
            Returns a list of the athletes who are members of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetClubMembersByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members
            </summary>
            <remarks>
            Returns a list of the athletes who are members of a given club.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryAthlete&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetLoggedInAthleteClubsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs
            </summary>
            <remarks>
            Returns a list of the clubs whose membership includes the authenticated athlete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryClub&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IClubsApi.GetLoggedInAthleteClubsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs
            </summary>
            <remarks>
            Returns a list of the clubs whose membership includes the authenticated athlete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryClub&gt;)</returns>
        </member>
        <member name="T:IO.Swagger.Api.ClubsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ClubsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ClubsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ClubsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubActivitiesById(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubActivitiesByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubActivitiesByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryActivity&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubActivitiesByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Activities Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryActivity&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubAdminsById(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators Returns a list of the administrators of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubAdminsByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators Returns a list of the administrators of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubAdminsByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators Returns a list of the administrators of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubAdminsByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Administrators Returns a list of the administrators of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryAthlete&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubById(System.Nullable{System.Int64})">
            <summary>
            Get Club Returns a given club using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>DetailedClub</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Club Returns a given club using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>ApiResponse of DetailedClub</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Club Returns a given club using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>Task of DetailedClub</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Club Returns a given club using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <returns>Task of ApiResponse (DetailedClub)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubMembersById(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members Returns a list of the athletes who are members of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubMembersByIdWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members Returns a list of the athletes who are members of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubMembersByIdAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members Returns a list of the athletes who are members of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryAthlete&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetClubMembersByIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Club Members Returns a list of the athletes who are members of a given club.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the club.</param>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryAthlete&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetLoggedInAthleteClubs(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs Returns a list of the clubs whose membership includes the authenticated athlete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummaryClub&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetLoggedInAthleteClubsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs Returns a list of the clubs whose membership includes the authenticated athlete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummaryClub&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetLoggedInAthleteClubsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs Returns a list of the clubs whose membership includes the authenticated athlete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummaryClub&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ClubsApi.GetLoggedInAthleteClubsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Clubs Returns a list of the clubs whose membership includes the authenticated athlete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummaryClub&gt;)</returns>
        </member>
        <member name="P:IO.Swagger.Api.ClubsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.ClubsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IGearsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IGearsApi.GetGearById(System.String)">
            <summary>
            Get Equipment
            </summary>
            <remarks>
            Returns an equipment using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>DetailedGear</returns>
        </member>
        <member name="M:IO.Swagger.Api.IGearsApi.GetGearByIdWithHttpInfo(System.String)">
            <summary>
            Get Equipment
            </summary>
            <remarks>
            Returns an equipment using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>ApiResponse of DetailedGear</returns>
        </member>
        <member name="M:IO.Swagger.Api.IGearsApi.GetGearByIdAsync(System.String)">
            <summary>
            Get Equipment
            </summary>
            <remarks>
            Returns an equipment using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>Task of DetailedGear</returns>
        </member>
        <member name="M:IO.Swagger.Api.IGearsApi.GetGearByIdAsyncWithHttpInfo(System.String)">
            <summary>
            Get Equipment
            </summary>
            <remarks>
            Returns an equipment using its identifier.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>Task of ApiResponse (DetailedGear)</returns>
        </member>
        <member name="T:IO.Swagger.Api.GearsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.GearsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.GearsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.GearsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.GetGearById(System.String)">
            <summary>
            Get Equipment Returns an equipment using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>DetailedGear</returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.GetGearByIdWithHttpInfo(System.String)">
            <summary>
            Get Equipment Returns an equipment using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>ApiResponse of DetailedGear</returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.GetGearByIdAsync(System.String)">
            <summary>
            Get Equipment Returns an equipment using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>Task of DetailedGear</returns>
        </member>
        <member name="M:IO.Swagger.Api.GearsApi.GetGearByIdAsyncWithHttpInfo(System.String)">
            <summary>
            Get Equipment Returns an equipment using its identifier.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the gear.</param>
            <returns>Task of ApiResponse (DetailedGear)</returns>
        </member>
        <member name="P:IO.Swagger.Api.GearsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.GearsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IRoutesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsGPX(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX
            </summary>
            <remarks>
            Returns a GPX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsGPXWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX
            </summary>
            <remarks>
            Returns a GPX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsTCX(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX
            </summary>
            <remarks>
            Returns a TCX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsTCXWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX
            </summary>
            <remarks>
            Returns a TCX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteById(System.Nullable{System.Int64})">
            <summary>
            Get Route
            </summary>
            <remarks>
            Returns a route using its identifier. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Route</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route
            </summary>
            <remarks>
            Returns a route using its identifier. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of Route</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRoutesByAthleteId(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes
            </summary>
            <remarks>
            Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;Route&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRoutesByAthleteIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes
            </summary>
            <remarks>
            Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;Route&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsGPXAsync(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX
            </summary>
            <remarks>
            Returns a GPX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsGPXAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX
            </summary>
            <remarks>
            Returns a GPX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsTCXAsync(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX
            </summary>
            <remarks>
            Returns a TCX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteAsTCXAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX
            </summary>
            <remarks>
            Returns a TCX file of the route. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Route
            </summary>
            <remarks>
            Returns a route using its identifier. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of Route</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRouteByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route
            </summary>
            <remarks>
            Returns a route using its identifier. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse (Route)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRoutesByAthleteIdAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes
            </summary>
            <remarks>
            Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;Route&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRoutesApi.GetRoutesByAthleteIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes
            </summary>
            <remarks>
            Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;Route&gt;)</returns>
        </member>
        <member name="T:IO.Swagger.Api.RoutesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.RoutesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.RoutesApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.RoutesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsGPX(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX Returns a GPX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsGPXWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX Returns a GPX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsGPXAsync(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX Returns a GPX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsGPXAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route GPX Returns a GPX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsTCX(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX Returns a TCX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsTCXWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX Returns a TCX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsTCXAsync(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX Returns a TCX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteAsTCXAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Export Route TCX Returns a TCX file of the route. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteById(System.Nullable{System.Int64})">
            <summary>
            Get Route Returns a route using its identifier. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Route</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route Returns a route using its identifier. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of Route</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Route Returns a route using its identifier. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of Route</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRouteByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route Returns a route using its identifier. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse (Route)</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRoutesByAthleteId(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;Route&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRoutesByAthleteIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;Route&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRoutesByAthleteIdAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;Route&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.RoutesApi.GetRoutesByAthleteIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Athlete Routes Returns a list of the routes created by the authenticated athlete. Private routes are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;Route&gt;)</returns>
        </member>
        <member name="P:IO.Swagger.Api.RoutesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.RoutesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.ISegmentEffortsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetEffortsBySegmentId(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts
            </summary>
            <remarks>
            Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;DetailedSegmentEffort&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetEffortsBySegmentIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts
            </summary>
            <remarks>
            Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;DetailedSegmentEffort&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetSegmentEffortById(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort
            </summary>
            <remarks>
            Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>DetailedSegmentEffort</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetSegmentEffortByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort
            </summary>
            <remarks>
            Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>ApiResponse of DetailedSegmentEffort</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetEffortsBySegmentIdAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts
            </summary>
            <remarks>
            Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;DetailedSegmentEffort&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetEffortsBySegmentIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts
            </summary>
            <remarks>
            Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;DetailedSegmentEffort&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetSegmentEffortByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort
            </summary>
            <remarks>
            Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>Task of DetailedSegmentEffort</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentEffortsApi.GetSegmentEffortByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort
            </summary>
            <remarks>
            Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>Task of ApiResponse (DetailedSegmentEffort)</returns>
        </member>
        <member name="T:IO.Swagger.Api.SegmentEffortsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SegmentEffortsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SegmentEffortsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SegmentEffortsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetEffortsBySegmentId(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;DetailedSegmentEffort&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetEffortsBySegmentIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;DetailedSegmentEffort&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetEffortsBySegmentIdAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;DetailedSegmentEffort&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetEffortsBySegmentIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            List Segment Efforts Returns a set of the authenticated athlete's segment efforts for a given segment.  Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="segmentId">The identifier of the segment.</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="endDateLocal">ISO 8601 formatted date time. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;DetailedSegmentEffort&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetSegmentEffortById(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>DetailedSegmentEffort</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetSegmentEffortByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>ApiResponse of DetailedSegmentEffort</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetSegmentEffortByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>Task of DetailedSegmentEffort</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentEffortsApi.GetSegmentEffortByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment Effort Returns a segment effort from an activity that is owned by the authenticated athlete. Requires subscription.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <returns>Task of ApiResponse (DetailedSegmentEffort)</returns>
        </member>
        <member name="P:IO.Swagger.Api.SegmentEffortsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.SegmentEffortsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.ISegmentsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.ExploreSegments(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments
            </summary>
            <remarks>
            Returns the top 10 segments matching a specified query.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>ExplorerResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.ExploreSegmentsWithHttpInfo(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments
            </summary>
            <remarks>
            Returns the top 10 segments matching a specified query.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>ApiResponse of ExplorerResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetLoggedInAthleteStarredSegments(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments
            </summary>
            <remarks>
            List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummarySegment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetLoggedInAthleteStarredSegmentsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments
            </summary>
            <remarks>
            List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummarySegment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetSegmentById(System.Nullable{System.Int64})">
            <summary>
            Get Segment
            </summary>
            <remarks>
            Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetSegmentByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment
            </summary>
            <remarks>
            Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>ApiResponse of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.StarSegment(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment
            </summary>
            <remarks>
            Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.StarSegmentWithHttpInfo(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment
            </summary>
            <remarks>
            Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>ApiResponse of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.ExploreSegmentsAsync(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments
            </summary>
            <remarks>
            Returns the top 10 segments matching a specified query.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>Task of ExplorerResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.ExploreSegmentsAsyncWithHttpInfo(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments
            </summary>
            <remarks>
            Returns the top 10 segments matching a specified query.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>Task of ApiResponse (ExplorerResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetLoggedInAthleteStarredSegmentsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments
            </summary>
            <remarks>
            List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummarySegment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetLoggedInAthleteStarredSegmentsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments
            </summary>
            <remarks>
            List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummarySegment&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetSegmentByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Segment
            </summary>
            <remarks>
            Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>Task of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.GetSegmentByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment
            </summary>
            <remarks>
            Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>Task of ApiResponse (DetailedSegment)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.StarSegmentAsync(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment
            </summary>
            <remarks>
            Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>Task of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISegmentsApi.StarSegmentAsyncWithHttpInfo(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment
            </summary>
            <remarks>
            Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>Task of ApiResponse (DetailedSegment)</returns>
        </member>
        <member name="T:IO.Swagger.Api.SegmentsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SegmentsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SegmentsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SegmentsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.ExploreSegments(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments Returns the top 10 segments matching a specified query.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>ExplorerResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.ExploreSegmentsWithHttpInfo(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments Returns the top 10 segments matching a specified query.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>ApiResponse of ExplorerResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.ExploreSegmentsAsync(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments Returns the top 10 segments matching a specified query.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>Task of ExplorerResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.ExploreSegmentsAsyncWithHttpInfo(System.Collections.Generic.List{System.Nullable{System.Single}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Explore segments Returns the top 10 segments matching a specified query.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bounds">The latitude and longitude for two points describing a rectangular boundary for the search: [southwest corner latitutde, southwest corner longitude, northeast corner latitude, northeast corner longitude]</param>
            <param name="activityType">Desired activity type. (optional)</param>
            <param name="minCat">The minimum climbing category. (optional)</param>
            <param name="maxCat">The maximum climbing category. (optional)</param>
            <returns>Task of ApiResponse (ExplorerResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetLoggedInAthleteStarredSegments(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>List&lt;SummarySegment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetLoggedInAthleteStarredSegmentsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>ApiResponse of List&lt;SummarySegment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetLoggedInAthleteStarredSegmentsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of List&lt;SummarySegment&gt;</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetLoggedInAthleteStarredSegmentsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List Starred Segments List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Page number. Defaults to 1. (optional)</param>
            <param name="perPage">Number of items per page. Defaults to 30. (optional, default to 30)</param>
            <returns>Task of ApiResponse (List&lt;SummarySegment&gt;)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetSegmentById(System.Nullable{System.Int64})">
            <summary>
            Get Segment Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetSegmentByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>ApiResponse of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetSegmentByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Segment Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>Task of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.GetSegmentByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Segment Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <returns>Task of ApiResponse (DetailedSegment)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.StarSegment(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.StarSegmentWithHttpInfo(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>ApiResponse of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.StarSegmentAsync(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>Task of DetailedSegment</returns>
        </member>
        <member name="M:IO.Swagger.Api.SegmentsApi.StarSegmentAsyncWithHttpInfo(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Star Segment Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="starred"></param>
            <param name="id">The identifier of the segment to star.</param>
            <returns>Task of ApiResponse (DetailedSegment)</returns>
        </member>
        <member name="P:IO.Swagger.Api.SegmentsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.SegmentsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IStreamsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetActivityStreams(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams
            </summary>
            <remarks>
            Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetActivityStreamsWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams
            </summary>
            <remarks>
            Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetRouteStreams(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams
            </summary>
            <remarks>
            Returns the given route's streams. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetRouteStreamsWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams
            </summary>
            <remarks>
            Returns the given route's streams. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentEffortStreams(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams
            </summary>
            <remarks>
            Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentEffortStreamsWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams
            </summary>
            <remarks>
            Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentStreams(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams
            </summary>
            <remarks>
            Returns the given segment's streams. Requires read_all scope for private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentStreamsWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams
            </summary>
            <remarks>
            Returns the given segment's streams. Requires read_all scope for private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetActivityStreamsAsync(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams
            </summary>
            <remarks>
            Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetActivityStreamsAsyncWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams
            </summary>
            <remarks>
            Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetRouteStreamsAsync(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams
            </summary>
            <remarks>
            Returns the given route's streams. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetRouteStreamsAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams
            </summary>
            <remarks>
            Returns the given route's streams. Requires read_all scope for private routes.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentEffortStreamsAsync(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams
            </summary>
            <remarks>
            Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentEffortStreamsAsyncWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams
            </summary>
            <remarks>
            Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentStreamsAsync(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams
            </summary>
            <remarks>
            Returns the given segment's streams. Requires read_all scope for private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.IStreamsApi.GetSegmentStreamsAsyncWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams
            </summary>
            <remarks>
            Returns the given segment's streams. Requires read_all scope for private segments.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="T:IO.Swagger.Api.StreamsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.StreamsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.StreamsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.StreamsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetActivityStreams(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetActivityStreamsWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetActivityStreamsAsync(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetActivityStreamsAsyncWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Activity Streams Returns the given activity's streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the activity.</param>
            <param name="keys">Desired stream types.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetRouteStreams(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams Returns the given route's streams. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetRouteStreamsWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams Returns the given route's streams. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetRouteStreamsAsync(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams Returns the given route's streams. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetRouteStreamsAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Route Streams Returns the given route's streams. Requires read_all scope for private routes.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the route.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentEffortStreams(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentEffortStreamsWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentEffortStreamsAsync(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentEffortStreamsAsyncWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Effort Streams Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment effort.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentStreams(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams Returns the given segment's streams. Requires read_all scope for private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentStreamsWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams Returns the given segment's streams. Requires read_all scope for private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>ApiResponse of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentStreamsAsync(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams Returns the given segment's streams. Requires read_all scope for private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of StreamSet</returns>
        </member>
        <member name="M:IO.Swagger.Api.StreamsApi.GetSegmentStreamsAsyncWithHttpInfo(System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Get Segment Streams Returns the given segment's streams. Requires read_all scope for private segments.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The identifier of the segment.</param>
            <param name="keys">The types of streams to return.</param>
            <param name="keyByType">Must be true.</param>
            <returns>Task of ApiResponse (StreamSet)</returns>
        </member>
        <member name="P:IO.Swagger.Api.StreamsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.StreamsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IUploadsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.CreateUpload(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity
            </summary>
            <remarks>
            Uploads a new data file to create an activity from. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.CreateUploadWithHttpInfo(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity
            </summary>
            <remarks>
            Uploads a new data file to create an activity from. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>ApiResponse of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.GetUploadById(System.Nullable{System.Int64})">
            <summary>
            Get Upload
            </summary>
            <remarks>
            Returns an upload for a given identifier. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.GetUploadByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Upload
            </summary>
            <remarks>
            Returns an upload for a given identifier. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>ApiResponse of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.CreateUploadAsync(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity
            </summary>
            <remarks>
            Uploads a new data file to create an activity from. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>Task of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.CreateUploadAsyncWithHttpInfo(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity
            </summary>
            <remarks>
            Uploads a new data file to create an activity from. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>Task of ApiResponse (Upload)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.GetUploadByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Upload
            </summary>
            <remarks>
            Returns an upload for a given identifier. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>Task of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUploadsApi.GetUploadByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Upload
            </summary>
            <remarks>
            Returns an upload for a given identifier. Requires activity:write scope.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>Task of ApiResponse (Upload)</returns>
        </member>
        <member name="T:IO.Swagger.Api.UploadsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.UploadsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.UploadsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.UploadsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.CreateUpload(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity Uploads a new data file to create an activity from. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.CreateUploadWithHttpInfo(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity Uploads a new data file to create an activity from. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>ApiResponse of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.CreateUploadAsync(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity Uploads a new data file to create an activity from. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>Task of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.CreateUploadAsyncWithHttpInfo(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Upload Activity Uploads a new data file to create an activity from. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file"> (optional)</param>
            <param name="name"> (optional)</param>
            <param name="description"> (optional)</param>
            <param name="trainer"> (optional)</param>
            <param name="commute"> (optional)</param>
            <param name="dataType"> (optional)</param>
            <param name="externalId"> (optional)</param>
            <returns>Task of ApiResponse (Upload)</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.GetUploadById(System.Nullable{System.Int64})">
            <summary>
            Get Upload Returns an upload for a given identifier. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.GetUploadByIdWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Upload Returns an upload for a given identifier. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>ApiResponse of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.GetUploadByIdAsync(System.Nullable{System.Int64})">
            <summary>
            Get Upload Returns an upload for a given identifier. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>Task of Upload</returns>
        </member>
        <member name="M:IO.Swagger.Api.UploadsApi.GetUploadByIdAsyncWithHttpInfo(System.Nullable{System.Int64})">
            <summary>
            Get Upload Returns an upload for a given identifier. Requires activity:write scope.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadId">The identifier of the upload.</param>
            <returns>Task of ApiResponse (Upload)</returns>
        </member>
        <member name="P:IO.Swagger.Api.UploadsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.UploadsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default configuration.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default base path (https://www.strava.com/api/v3).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:IO.Swagger.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="P:IO.Swagger.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:IO.Swagger.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:IO.Swagger.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:IO.Swagger.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="T:IO.Swagger.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="T:IO.Swagger.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiResponse`1"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:IO.Swagger.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:IO.Swagger.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:IO.Swagger.Client.Configuration.ApiClient"/> based on this <see cref="T:IO.Swagger.Client.Configuration"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="T:IO.Swagger.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:IO.Swagger.Client.GlobalConfiguration">
            <summary>
            <see cref="T:IO.Swagger.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .swagger-codegen-ignore file.
            </remarks>
        </member>
        <member name="T:IO.Swagger.Client.SwaggerDateConverter">
            <summary>
            Formatter for 'date' swagger formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.SwaggerDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.SwaggerDateConverter"/> class.
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ActivitiesBody">
            <summary>
            ActivitiesBody
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActivitiesBody"/> class.
            </summary>
            <param name="name">The name of the activity. (required).</param>
            <param name="type">Type of activity. For example - Run, Ride etc..</param>
            <param name="sportType">Sport type of activity. For example - Run, MountainBikeRide, Ride, etc. (required).</param>
            <param name="startDateLocal">ISO 8601 formatted date time. (required).</param>
            <param name="elapsedTime">In seconds. (required).</param>
            <param name="description">Description of the activity..</param>
            <param name="distance">In meters..</param>
            <param name="trainer">Set to 1 to mark as a trainer activity..</param>
            <param name="commute">Set to 1 to mark as commute..</param>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.Equals(IO.Swagger.Model.ActivitiesBody)">
            <summary>
            Returns true if ActivitiesBody instances are equal
            </summary>
            <param name="input">Instance of ActivitiesBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivitiesBody.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.Name">
            <summary>
            The name of the activity.
            </summary>
            <value>The name of the activity.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.Type">
            <summary>
            Type of activity. For example - Run, Ride etc.
            </summary>
            <value>Type of activity. For example - Run, Ride etc.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.SportType">
            <summary>
            Sport type of activity. For example - Run, MountainBikeRide, Ride, etc.
            </summary>
            <value>Sport type of activity. For example - Run, MountainBikeRide, Ride, etc.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.StartDateLocal">
            <summary>
            ISO 8601 formatted date time.
            </summary>
            <value>ISO 8601 formatted date time.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.ElapsedTime">
            <summary>
            In seconds.
            </summary>
            <value>In seconds.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.Description">
            <summary>
            Description of the activity.
            </summary>
            <value>Description of the activity.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.Distance">
            <summary>
            In meters.
            </summary>
            <value>In meters.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.Trainer">
            <summary>
            Set to 1 to mark as a trainer activity.
            </summary>
            <value>Set to 1 to mark as a trainer activity.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivitiesBody.Commute">
            <summary>
            Set to 1 to mark as commute.
            </summary>
            <value>Set to 1 to mark as commute.</value>
        </member>
        <member name="T:IO.Swagger.Model.ActivityStats">
            <summary>
            A set of rolled-up statistics and totals for an athlete
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal,IO.Swagger.Model.ActivityTotal)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActivityStats"/> class.
            </summary>
            <param name="biggestRideDistance">The longest distance ridden by the athlete..</param>
            <param name="biggestClimbElevationGain">The highest climb ridden by the athlete..</param>
            <param name="recentRideTotals">recentRideTotals.</param>
            <param name="recentRunTotals">recentRunTotals.</param>
            <param name="recentSwimTotals">recentSwimTotals.</param>
            <param name="ytdRideTotals">ytdRideTotals.</param>
            <param name="ytdRunTotals">ytdRunTotals.</param>
            <param name="ytdSwimTotals">ytdSwimTotals.</param>
            <param name="allRideTotals">allRideTotals.</param>
            <param name="allRunTotals">allRunTotals.</param>
            <param name="allSwimTotals">allSwimTotals.</param>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.Equals(IO.Swagger.Model.ActivityStats)">
            <summary>
            Returns true if ActivityStats instances are equal
            </summary>
            <param name="input">Instance of ActivityStats to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityStats.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.BiggestRideDistance">
            <summary>
            The longest distance ridden by the athlete.
            </summary>
            <value>The longest distance ridden by the athlete.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.BiggestClimbElevationGain">
            <summary>
            The highest climb ridden by the athlete.
            </summary>
            <value>The highest climb ridden by the athlete.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.RecentRideTotals">
            <summary>
            Gets or Sets RecentRideTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.RecentRunTotals">
            <summary>
            Gets or Sets RecentRunTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.RecentSwimTotals">
            <summary>
            Gets or Sets RecentSwimTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.YtdRideTotals">
            <summary>
            Gets or Sets YtdRideTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.YtdRunTotals">
            <summary>
            Gets or Sets YtdRunTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.YtdSwimTotals">
            <summary>
            Gets or Sets YtdSwimTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.AllRideTotals">
            <summary>
            Gets or Sets AllRideTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.AllRunTotals">
            <summary>
            Gets or Sets AllRunTotals
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityStats.AllSwimTotals">
            <summary>
            Gets or Sets AllSwimTotals
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ActivityTotal">
            <summary>
            A roll-up of metrics pertaining to a set of activities. Values are in seconds and meters.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.#ctor(System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActivityTotal"/> class.
            </summary>
            <param name="count">The number of activities considered in this total..</param>
            <param name="distance">The total distance covered by the considered activities..</param>
            <param name="movingTime">The total moving time of the considered activities..</param>
            <param name="elapsedTime">The total elapsed time of the considered activities..</param>
            <param name="elevationGain">The total elevation gain of the considered activities..</param>
            <param name="achievementCount">The total number of achievements of the considered activities..</param>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.Equals(IO.Swagger.Model.ActivityTotal)">
            <summary>
            Returns true if ActivityTotal instances are equal
            </summary>
            <param name="input">Instance of ActivityTotal to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityTotal.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ActivityTotal.Count">
            <summary>
            The number of activities considered in this total.
            </summary>
            <value>The number of activities considered in this total.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityTotal.Distance">
            <summary>
            The total distance covered by the considered activities.
            </summary>
            <value>The total distance covered by the considered activities.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityTotal.MovingTime">
            <summary>
            The total moving time of the considered activities.
            </summary>
            <value>The total moving time of the considered activities.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityTotal.ElapsedTime">
            <summary>
            The total elapsed time of the considered activities.
            </summary>
            <value>The total elapsed time of the considered activities.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityTotal.ElevationGain">
            <summary>
            The total elevation gain of the considered activities.
            </summary>
            <value>The total elevation gain of the considered activities.</value>
        </member>
        <member name="P:IO.Swagger.Model.ActivityTotal.AchievementCount">
            <summary>
            The total number of achievements of the considered activities.
            </summary>
            <value>The total number of achievements of the considered activities.</value>
        </member>
        <member name="T:IO.Swagger.Model.ActivityType">
            <summary>
            An enumeration of the types an activity may have. Note that this enumeration does not include new sport types (e.g. MountainBikeRide, EMountainBikeRide), activities with these sport types will have the corresponding activity type (e.g. Ride for MountainBikeRide, EBikeRide for EMountainBikeRide)
            </summary>
            <value>An enumeration of the types an activity may have. Note that this enumeration does not include new sport types (e.g. MountainBikeRide, EMountainBikeRide), activities with these sport types will have the corresponding activity type (e.g. Ride for MountainBikeRide, EBikeRide for EMountainBikeRide)</value>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.AlpineSki">
            <summary>
            Enum AlpineSki for value: AlpineSki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.BackcountrySki">
            <summary>
            Enum BackcountrySki for value: BackcountrySki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Canoeing">
            <summary>
            Enum Canoeing for value: Canoeing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Crossfit">
            <summary>
            Enum Crossfit for value: Crossfit
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.EBikeRide">
            <summary>
            Enum EBikeRide for value: EBikeRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Elliptical">
            <summary>
            Enum Elliptical for value: Elliptical
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Golf">
            <summary>
            Enum Golf for value: Golf
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Handcycle">
            <summary>
            Enum Handcycle for value: Handcycle
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Hike">
            <summary>
            Enum Hike for value: Hike
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.IceSkate">
            <summary>
            Enum IceSkate for value: IceSkate
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.InlineSkate">
            <summary>
            Enum InlineSkate for value: InlineSkate
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Kayaking">
            <summary>
            Enum Kayaking for value: Kayaking
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Kitesurf">
            <summary>
            Enum Kitesurf for value: Kitesurf
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.NordicSki">
            <summary>
            Enum NordicSki for value: NordicSki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Ride">
            <summary>
            Enum Ride for value: Ride
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.RockClimbing">
            <summary>
            Enum RockClimbing for value: RockClimbing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.RollerSki">
            <summary>
            Enum RollerSki for value: RollerSki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Rowing">
            <summary>
            Enum Rowing for value: Rowing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Run">
            <summary>
            Enum Run for value: Run
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Sail">
            <summary>
            Enum Sail for value: Sail
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Skateboard">
            <summary>
            Enum Skateboard for value: Skateboard
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Snowboard">
            <summary>
            Enum Snowboard for value: Snowboard
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Snowshoe">
            <summary>
            Enum Snowshoe for value: Snowshoe
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Soccer">
            <summary>
            Enum Soccer for value: Soccer
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.StairStepper">
            <summary>
            Enum StairStepper for value: StairStepper
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.StandUpPaddling">
            <summary>
            Enum StandUpPaddling for value: StandUpPaddling
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Surfing">
            <summary>
            Enum Surfing for value: Surfing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Swim">
            <summary>
            Enum Swim for value: Swim
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Velomobile">
            <summary>
            Enum Velomobile for value: Velomobile
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.VirtualRide">
            <summary>
            Enum VirtualRide for value: VirtualRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.VirtualRun">
            <summary>
            Enum VirtualRun for value: VirtualRun
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Walk">
            <summary>
            Enum Walk for value: Walk
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.WeightTraining">
            <summary>
            Enum WeightTraining for value: WeightTraining
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Wheelchair">
            <summary>
            Enum Wheelchair for value: Wheelchair
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Windsurf">
            <summary>
            Enum Windsurf for value: Windsurf
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Workout">
            <summary>
            Enum Workout for value: Workout
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityType.Yoga">
            <summary>
            Enum Yoga for value: Yoga
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ActivityZone">
            <summary>
            ActivityZone
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.TimedZoneDistribution,System.Nullable{IO.Swagger.Model.ActivityZone.TypeEnum},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActivityZone"/> class.
            </summary>
            <param name="score">score.</param>
            <param name="distributionBuckets">distributionBuckets.</param>
            <param name="type">type.</param>
            <param name="sensorBased">sensorBased.</param>
            <param name="points">points.</param>
            <param name="customZones">customZones.</param>
            <param name="max">max.</param>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.Equals(IO.Swagger.Model.ActivityZone)">
            <summary>
            Returns true if ActivityZone instances are equal
            </summary>
            <param name="input">Instance of ActivityZone to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ActivityZone.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.Score">
            <summary>
            Gets or Sets Score
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.DistributionBuckets">
            <summary>
            Gets or Sets DistributionBuckets
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.SensorBased">
            <summary>
            Gets or Sets SensorBased
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.Points">
            <summary>
            Gets or Sets Points
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.CustomZones">
            <summary>
            Gets or Sets CustomZones
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ActivityZone.Max">
            <summary>
            Gets or Sets Max
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ActivityZone.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityZone.TypeEnum.Heartrate">
            <summary>
            Enum Heartrate for value: heartrate
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ActivityZone.TypeEnum.Power">
            <summary>
            Enum Power for value: power
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AltitudeStream">
            <summary>
            AltitudeStream
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.BaseStream">
            <summary>
            BaseStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.BaseStream"/> class.
            </summary>
            <param name="originalSize">The number of data points in this stream.</param>
            <param name="resolution">The level of detail (sampling) in which this stream was returned.</param>
            <param name="seriesType">The base series used in the case the stream was downsampled.</param>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.Equals(IO.Swagger.Model.BaseStream)">
            <summary>
            Returns true if BaseStream instances are equal
            </summary>
            <param name="input">Instance of BaseStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.BaseStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.BaseStream.Resolution">
            <summary>
            The level of detail (sampling) in which this stream was returned
            </summary>
            <value>The level of detail (sampling) in which this stream was returned</value>
        </member>
        <member name="P:IO.Swagger.Model.BaseStream.SeriesType">
            <summary>
            The base series used in the case the stream was downsampled
            </summary>
            <value>The base series used in the case the stream was downsampled</value>
        </member>
        <member name="P:IO.Swagger.Model.BaseStream.OriginalSize">
            <summary>
            The number of data points in this stream
            </summary>
            <value>The number of data points in this stream</value>
        </member>
        <member name="T:IO.Swagger.Model.BaseStream.ResolutionEnum">
            <summary>
            The level of detail (sampling) in which this stream was returned
            </summary>
            <value>The level of detail (sampling) in which this stream was returned</value>
        </member>
        <member name="F:IO.Swagger.Model.BaseStream.ResolutionEnum.Low">
            <summary>
            Enum Low for value: low
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.BaseStream.ResolutionEnum.Medium">
            <summary>
            Enum Medium for value: medium
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.BaseStream.ResolutionEnum.High">
            <summary>
            Enum High for value: high
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.BaseStream.SeriesTypeEnum">
            <summary>
            The base series used in the case the stream was downsampled
            </summary>
            <value>The base series used in the case the stream was downsampled</value>
        </member>
        <member name="F:IO.Swagger.Model.BaseStream.SeriesTypeEnum.Distance">
            <summary>
            Enum Distance for value: distance
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.BaseStream.SeriesTypeEnum.Time">
            <summary>
            Enum Time for value: time
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Single}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AltitudeStream"/> class.
            </summary>
            <param name="data">The sequence of altitude values for this stream, in meters.</param>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.Equals(IO.Swagger.Model.AltitudeStream)">
            <summary>
            Returns true if AltitudeStream instances are equal
            </summary>
            <param name="input">Instance of AltitudeStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AltitudeStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AltitudeStream.Data">
            <summary>
            The sequence of altitude values for this stream, in meters
            </summary>
            <value>The sequence of altitude values for this stream, in meters</value>
        </member>
        <member name="T:IO.Swagger.Model.CadenceStream">
            <summary>
            CadenceStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CadenceStream"/> class.
            </summary>
            <param name="data">The sequence of cadence values for this stream, in rotations per minute.</param>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.Equals(IO.Swagger.Model.CadenceStream)">
            <summary>
            Returns true if CadenceStream instances are equal
            </summary>
            <param name="input">Instance of CadenceStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CadenceStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CadenceStream.Data">
            <summary>
            The sequence of cadence values for this stream, in rotations per minute
            </summary>
            <value>The sequence of cadence values for this stream, in rotations per minute</value>
        </member>
        <member name="T:IO.Swagger.Model.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Comment.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,IO.Swagger.Model.SummaryAthlete,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Comment"/> class.
            </summary>
            <param name="id">The unique identifier of this comment.</param>
            <param name="activityId">The identifier of the activity this comment is related to.</param>
            <param name="text">The content of the comment.</param>
            <param name="athlete">athlete.</param>
            <param name="createdAt">The time at which this comment was created..</param>
        </member>
        <member name="M:IO.Swagger.Model.Comment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Comment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Comment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Comment.Equals(IO.Swagger.Model.Comment)">
            <summary>
            Returns true if Comment instances are equal
            </summary>
            <param name="input">Instance of Comment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Comment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Comment.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Comment.Id">
            <summary>
            The unique identifier of this comment
            </summary>
            <value>The unique identifier of this comment</value>
        </member>
        <member name="P:IO.Swagger.Model.Comment.ActivityId">
            <summary>
            The identifier of the activity this comment is related to
            </summary>
            <value>The identifier of the activity this comment is related to</value>
        </member>
        <member name="P:IO.Swagger.Model.Comment.Text">
            <summary>
            The content of the comment
            </summary>
            <value>The content of the comment</value>
        </member>
        <member name="P:IO.Swagger.Model.Comment.Athlete">
            <summary>
            Gets or Sets Athlete
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Comment.CreatedAt">
            <summary>
            The time at which this comment was created.
            </summary>
            <value>The time at which this comment was created.</value>
        </member>
        <member name="T:IO.Swagger.Model.DetailedActivity">
            <summary>
            DetailedActivity
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummaryActivity">
            <summary>
            SummaryActivity
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.MetaActivity">
            <summary>
            MetaActivity
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.#ctor(System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MetaActivity"/> class.
            </summary>
            <param name="id">The unique identifier of the activity.</param>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.Equals(IO.Swagger.Model.MetaActivity)">
            <summary>
            Returns true if MetaActivity instances are equal
            </summary>
            <param name="input">Instance of MetaActivity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaActivity.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MetaActivity.Id">
            <summary>
            The unique identifier of the activity
            </summary>
            <value>The unique identifier of the activity</value>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.#ctor(System.String,System.Nullable{System.Int64},IO.Swagger.Model.MetaAthlete,System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},IO.Swagger.Model.ActivityType,IO.Swagger.Model.SportType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,IO.Swagger.Model.LatLng,IO.Swagger.Model.LatLng,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},IO.Swagger.Model.PolylineMap,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummaryActivity"/> class.
            </summary>
            <param name="externalId">The identifier provided at upload time.</param>
            <param name="uploadId">The identifier of the upload that resulted in this activity.</param>
            <param name="athlete">athlete.</param>
            <param name="name">The name of the activity.</param>
            <param name="distance">The activity's distance, in meters.</param>
            <param name="movingTime">The activity's moving time, in seconds.</param>
            <param name="elapsedTime">The activity's elapsed time, in seconds.</param>
            <param name="totalElevationGain">The activity's total elevation gain..</param>
            <param name="elevHigh">The activity's highest elevation, in meters.</param>
            <param name="elevLow">The activity's lowest elevation, in meters.</param>
            <param name="type">type.</param>
            <param name="sportType">sportType.</param>
            <param name="startDate">The time at which the activity was started..</param>
            <param name="startDateLocal">The time at which the activity was started in the local timezone..</param>
            <param name="timezone">The timezone of the activity.</param>
            <param name="startLatlng">startLatlng.</param>
            <param name="endLatlng">endLatlng.</param>
            <param name="achievementCount">The number of achievements gained during this activity.</param>
            <param name="kudosCount">The number of kudos given for this activity.</param>
            <param name="commentCount">The number of comments for this activity.</param>
            <param name="athleteCount">The number of athletes for taking part in a group activity.</param>
            <param name="photoCount">The number of Instagram photos for this activity.</param>
            <param name="totalPhotoCount">The number of Instagram and Strava photos for this activity.</param>
            <param name="map">map.</param>
            <param name="trainer">Whether this activity was recorded on a training machine.</param>
            <param name="commute">Whether this activity is a commute.</param>
            <param name="manual">Whether this activity was created manually.</param>
            <param name="_private">Whether this activity is private.</param>
            <param name="flagged">Whether this activity is flagged.</param>
            <param name="workoutType">The activity's workout type.</param>
            <param name="uploadIdStr">The unique identifier of the upload in string format.</param>
            <param name="averageSpeed">The activity's average speed, in meters per second.</param>
            <param name="maxSpeed">The activity's max speed, in meters per second.</param>
            <param name="hasKudoed">Whether the logged-in athlete has kudoed this activity.</param>
            <param name="hideFromHome">Whether the activity is muted.</param>
            <param name="gearId">The id of the gear for the activity.</param>
            <param name="kilojoules">The total work done in kilojoules during this activity. Rides only.</param>
            <param name="averageWatts">Average power output in watts during this activity. Rides only.</param>
            <param name="deviceWatts">Whether the watts are from a power meter, false if estimated.</param>
            <param name="maxWatts">Rides with power meter data only.</param>
            <param name="weightedAverageWatts">Similar to Normalized Power. Rides with power meter data only.</param>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.Equals(IO.Swagger.Model.SummaryActivity)">
            <summary>
            Returns true if SummaryActivity instances are equal
            </summary>
            <param name="input">Instance of SummaryActivity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryActivity.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.ExternalId">
            <summary>
            The identifier provided at upload time
            </summary>
            <value>The identifier provided at upload time</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.UploadId">
            <summary>
            The identifier of the upload that resulted in this activity
            </summary>
            <value>The identifier of the upload that resulted in this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Athlete">
            <summary>
            Gets or Sets Athlete
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Name">
            <summary>
            The name of the activity
            </summary>
            <value>The name of the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Distance">
            <summary>
            The activity&#x27;s distance, in meters
            </summary>
            <value>The activity&#x27;s distance, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.MovingTime">
            <summary>
            The activity&#x27;s moving time, in seconds
            </summary>
            <value>The activity&#x27;s moving time, in seconds</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.ElapsedTime">
            <summary>
            The activity&#x27;s elapsed time, in seconds
            </summary>
            <value>The activity&#x27;s elapsed time, in seconds</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.TotalElevationGain">
            <summary>
            The activity&#x27;s total elevation gain.
            </summary>
            <value>The activity&#x27;s total elevation gain.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.ElevHigh">
            <summary>
            The activity&#x27;s highest elevation, in meters
            </summary>
            <value>The activity&#x27;s highest elevation, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.ElevLow">
            <summary>
            The activity&#x27;s lowest elevation, in meters
            </summary>
            <value>The activity&#x27;s lowest elevation, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.SportType">
            <summary>
            Gets or Sets SportType
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.StartDate">
            <summary>
            The time at which the activity was started.
            </summary>
            <value>The time at which the activity was started.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.StartDateLocal">
            <summary>
            The time at which the activity was started in the local timezone.
            </summary>
            <value>The time at which the activity was started in the local timezone.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Timezone">
            <summary>
            The timezone of the activity
            </summary>
            <value>The timezone of the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.StartLatlng">
            <summary>
            Gets or Sets StartLatlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.EndLatlng">
            <summary>
            Gets or Sets EndLatlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.AchievementCount">
            <summary>
            The number of achievements gained during this activity
            </summary>
            <value>The number of achievements gained during this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.KudosCount">
            <summary>
            The number of kudos given for this activity
            </summary>
            <value>The number of kudos given for this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.CommentCount">
            <summary>
            The number of comments for this activity
            </summary>
            <value>The number of comments for this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.AthleteCount">
            <summary>
            The number of athletes for taking part in a group activity
            </summary>
            <value>The number of athletes for taking part in a group activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.PhotoCount">
            <summary>
            The number of Instagram photos for this activity
            </summary>
            <value>The number of Instagram photos for this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.TotalPhotoCount">
            <summary>
            The number of Instagram and Strava photos for this activity
            </summary>
            <value>The number of Instagram and Strava photos for this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Map">
            <summary>
            Gets or Sets Map
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Trainer">
            <summary>
            Whether this activity was recorded on a training machine
            </summary>
            <value>Whether this activity was recorded on a training machine</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Commute">
            <summary>
            Whether this activity is a commute
            </summary>
            <value>Whether this activity is a commute</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Manual">
            <summary>
            Whether this activity was created manually
            </summary>
            <value>Whether this activity was created manually</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity._Private">
            <summary>
            Whether this activity is private
            </summary>
            <value>Whether this activity is private</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Flagged">
            <summary>
            Whether this activity is flagged
            </summary>
            <value>Whether this activity is flagged</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.WorkoutType">
            <summary>
            The activity&#x27;s workout type
            </summary>
            <value>The activity&#x27;s workout type</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.UploadIdStr">
            <summary>
            The unique identifier of the upload in string format
            </summary>
            <value>The unique identifier of the upload in string format</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.AverageSpeed">
            <summary>
            The activity&#x27;s average speed, in meters per second
            </summary>
            <value>The activity&#x27;s average speed, in meters per second</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.MaxSpeed">
            <summary>
            The activity&#x27;s max speed, in meters per second
            </summary>
            <value>The activity&#x27;s max speed, in meters per second</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.HasKudoed">
            <summary>
            Whether the logged-in athlete has kudoed this activity
            </summary>
            <value>Whether the logged-in athlete has kudoed this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.HideFromHome">
            <summary>
            Whether the activity is muted
            </summary>
            <value>Whether the activity is muted</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.GearId">
            <summary>
            The id of the gear for the activity
            </summary>
            <value>The id of the gear for the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.Kilojoules">
            <summary>
            The total work done in kilojoules during this activity. Rides only
            </summary>
            <value>The total work done in kilojoules during this activity. Rides only</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.AverageWatts">
            <summary>
            Average power output in watts during this activity. Rides only
            </summary>
            <value>Average power output in watts during this activity. Rides only</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.DeviceWatts">
            <summary>
            Whether the watts are from a power meter, false if estimated
            </summary>
            <value>Whether the watts are from a power meter, false if estimated</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.MaxWatts">
            <summary>
            Rides with power meter data only
            </summary>
            <value>Rides with power meter data only</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryActivity.WeightedAverageWatts">
            <summary>
            Similar to Normalized Power. Rides with power meter data only
            </summary>
            <value>Similar to Normalized Power. Rides with power meter data only</value>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.#ctor(System.String,IO.Swagger.Model.PhotosSummary,IO.Swagger.Model.SummaryGear,System.Nullable{System.Single},System.Collections.Generic.List{IO.Swagger.Model.DetailedSegmentEffort},System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.Split},System.Collections.Generic.List{IO.Swagger.Model.Split},System.Collections.Generic.List{IO.Swagger.Model.Lap},System.Collections.Generic.List{IO.Swagger.Model.DetailedSegmentEffort},System.String,System.Nullable{System.Int64},IO.Swagger.Model.MetaAthlete,System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},IO.Swagger.Model.ActivityType,IO.Swagger.Model.SportType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,IO.Swagger.Model.LatLng,IO.Swagger.Model.LatLng,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},IO.Swagger.Model.PolylineMap,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DetailedActivity"/> class.
            </summary>
            <param name="description">The description of the activity.</param>
            <param name="photos">photos.</param>
            <param name="gear">gear.</param>
            <param name="calories">The number of kilocalories consumed during this activity.</param>
            <param name="segmentEfforts">segmentEfforts.</param>
            <param name="deviceName">The name of the device used to record the activity.</param>
            <param name="embedToken">The token used to embed a Strava activity.</param>
            <param name="splitsMetric">The splits of this activity in metric units (for runs).</param>
            <param name="splitsStandard">The splits of this activity in imperial units (for runs).</param>
            <param name="laps">laps.</param>
            <param name="bestEfforts">bestEfforts.</param>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.Equals(IO.Swagger.Model.DetailedActivity)">
            <summary>
            Returns true if DetailedActivity instances are equal
            </summary>
            <param name="input">Instance of DetailedActivity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedActivity.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.Description">
            <summary>
            The description of the activity
            </summary>
            <value>The description of the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.Photos">
            <summary>
            Gets or Sets Photos
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.Gear">
            <summary>
            Gets or Sets Gear
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.Calories">
            <summary>
            The number of kilocalories consumed during this activity
            </summary>
            <value>The number of kilocalories consumed during this activity</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.SegmentEfforts">
            <summary>
            Gets or Sets SegmentEfforts
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.DeviceName">
            <summary>
            The name of the device used to record the activity
            </summary>
            <value>The name of the device used to record the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.EmbedToken">
            <summary>
            The token used to embed a Strava activity
            </summary>
            <value>The token used to embed a Strava activity</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.SplitsMetric">
            <summary>
            The splits of this activity in metric units (for runs)
            </summary>
            <value>The splits of this activity in metric units (for runs)</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.SplitsStandard">
            <summary>
            The splits of this activity in imperial units (for runs)
            </summary>
            <value>The splits of this activity in imperial units (for runs)</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.Laps">
            <summary>
            Gets or Sets Laps
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedActivity.BestEfforts">
            <summary>
            Gets or Sets BestEfforts
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.DetailedAthlete">
            <summary>
            DetailedAthlete
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummaryAthlete">
            <summary>
            SummaryAthlete
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.MetaAthlete">
            <summary>
            MetaAthlete
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.#ctor(System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MetaAthlete"/> class.
            </summary>
            <param name="id">The unique identifier of the athlete.</param>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.Equals(IO.Swagger.Model.MetaAthlete)">
            <summary>
            Returns true if MetaAthlete instances are equal
            </summary>
            <param name="input">Instance of MetaAthlete to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaAthlete.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MetaAthlete.Id">
            <summary>
            The unique identifier of the athlete
            </summary>
            <value>The unique identifier of the athlete</value>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.SummaryAthlete.SexEnum},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummaryAthlete"/> class.
            </summary>
            <param name="resourceState">Resource state, indicates level of detail. Possible values: 1 -&gt; \"meta\", 2 -&gt; \"summary\", 3 -&gt; \"detail\".</param>
            <param name="firstname">The athlete's first name..</param>
            <param name="lastname">The athlete's last name..</param>
            <param name="profileMedium">URL to a 62x62 pixel profile picture..</param>
            <param name="profile">URL to a 124x124 pixel profile picture..</param>
            <param name="city">The athlete's city..</param>
            <param name="state">The athlete's state or geographical region..</param>
            <param name="country">The athlete's country..</param>
            <param name="sex">The athlete's sex..</param>
            <param name="premium">Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription..</param>
            <param name="summit">Whether the athlete has any Summit subscription..</param>
            <param name="createdAt">The time at which the athlete was created..</param>
            <param name="updatedAt">The time at which the athlete was last updated..</param>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.Equals(IO.Swagger.Model.SummaryAthlete)">
            <summary>
            Returns true if SummaryAthlete instances are equal
            </summary>
            <param name="input">Instance of SummaryAthlete to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryAthlete.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Sex">
            <summary>
            The athlete&#x27;s sex.
            </summary>
            <value>The athlete&#x27;s sex.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.ResourceState">
            <summary>
            Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;
            </summary>
            <value>Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Firstname">
            <summary>
            The athlete&#x27;s first name.
            </summary>
            <value>The athlete&#x27;s first name.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Lastname">
            <summary>
            The athlete&#x27;s last name.
            </summary>
            <value>The athlete&#x27;s last name.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.ProfileMedium">
            <summary>
            URL to a 62x62 pixel profile picture.
            </summary>
            <value>URL to a 62x62 pixel profile picture.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Profile">
            <summary>
            URL to a 124x124 pixel profile picture.
            </summary>
            <value>URL to a 124x124 pixel profile picture.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.City">
            <summary>
            The athlete&#x27;s city.
            </summary>
            <value>The athlete&#x27;s city.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.State">
            <summary>
            The athlete&#x27;s state or geographical region.
            </summary>
            <value>The athlete&#x27;s state or geographical region.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Country">
            <summary>
            The athlete&#x27;s country.
            </summary>
            <value>The athlete&#x27;s country.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Premium">
            <summary>
            Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription.
            </summary>
            <value>Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.Summit">
            <summary>
            Whether the athlete has any Summit subscription.
            </summary>
            <value>Whether the athlete has any Summit subscription.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.CreatedAt">
            <summary>
            The time at which the athlete was created.
            </summary>
            <value>The time at which the athlete was created.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryAthlete.UpdatedAt">
            <summary>
            The time at which the athlete was last updated.
            </summary>
            <value>The time at which the athlete was last updated.</value>
        </member>
        <member name="T:IO.Swagger.Model.SummaryAthlete.SexEnum">
            <summary>
            The athlete&#x27;s sex.
            </summary>
            <value>The athlete&#x27;s sex.</value>
        </member>
        <member name="F:IO.Swagger.Model.SummaryAthlete.SexEnum.M">
            <summary>
            Enum M for value: M
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SummaryAthlete.SexEnum.F">
            <summary>
            Enum F for value: F
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.DetailedAthlete.MeasurementPreferenceEnum},System.Nullable{System.Int32},System.Nullable{System.Single},System.Collections.Generic.List{IO.Swagger.Model.SummaryClub},System.Collections.Generic.List{IO.Swagger.Model.SummaryGear},System.Collections.Generic.List{IO.Swagger.Model.SummaryGear},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.SummaryAthlete.SexEnum},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DetailedAthlete"/> class.
            </summary>
            <param name="followerCount">The athlete's follower count..</param>
            <param name="friendCount">The athlete's friend count..</param>
            <param name="measurementPreference">The athlete's preferred unit system..</param>
            <param name="ftp">The athlete's FTP (Functional Threshold Power)..</param>
            <param name="weight">The athlete's weight..</param>
            <param name="clubs">The athlete's clubs..</param>
            <param name="bikes">The athlete's bikes..</param>
            <param name="shoes">The athlete's shoes..</param>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.Equals(IO.Swagger.Model.DetailedAthlete)">
            <summary>
            Returns true if DetailedAthlete instances are equal
            </summary>
            <param name="input">Instance of DetailedAthlete to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedAthlete.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.MeasurementPreference">
            <summary>
            The athlete&#x27;s preferred unit system.
            </summary>
            <value>The athlete&#x27;s preferred unit system.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.FollowerCount">
            <summary>
            The athlete&#x27;s follower count.
            </summary>
            <value>The athlete&#x27;s follower count.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.FriendCount">
            <summary>
            The athlete&#x27;s friend count.
            </summary>
            <value>The athlete&#x27;s friend count.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.Ftp">
            <summary>
            The athlete&#x27;s FTP (Functional Threshold Power).
            </summary>
            <value>The athlete&#x27;s FTP (Functional Threshold Power).</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.Weight">
            <summary>
            The athlete&#x27;s weight.
            </summary>
            <value>The athlete&#x27;s weight.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.Clubs">
            <summary>
            The athlete&#x27;s clubs.
            </summary>
            <value>The athlete&#x27;s clubs.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.Bikes">
            <summary>
            The athlete&#x27;s bikes.
            </summary>
            <value>The athlete&#x27;s bikes.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedAthlete.Shoes">
            <summary>
            The athlete&#x27;s shoes.
            </summary>
            <value>The athlete&#x27;s shoes.</value>
        </member>
        <member name="T:IO.Swagger.Model.DetailedAthlete.MeasurementPreferenceEnum">
            <summary>
            The athlete&#x27;s preferred unit system.
            </summary>
            <value>The athlete&#x27;s preferred unit system.</value>
        </member>
        <member name="F:IO.Swagger.Model.DetailedAthlete.MeasurementPreferenceEnum.Feet">
            <summary>
            Enum Feet for value: feet
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.DetailedAthlete.MeasurementPreferenceEnum.Meters">
            <summary>
            Enum Meters for value: meters
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.DetailedClub">
            <summary>
            DetailedClub
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummaryClub">
            <summary>
            SummaryClub
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.MetaClub">
            <summary>
            MetaClub
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MetaClub"/> class.
            </summary>
            <param name="id">The club's unique identifier..</param>
            <param name="resourceState">Resource state, indicates level of detail. Possible values: 1 -&gt; \"meta\", 2 -&gt; \"summary\", 3 -&gt; \"detail\".</param>
            <param name="name">The club's name..</param>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.Equals(IO.Swagger.Model.MetaClub)">
            <summary>
            Returns true if MetaClub instances are equal
            </summary>
            <param name="input">Instance of MetaClub to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MetaClub.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MetaClub.Id">
            <summary>
            The club&#x27;s unique identifier.
            </summary>
            <value>The club&#x27;s unique identifier.</value>
        </member>
        <member name="P:IO.Swagger.Model.MetaClub.ResourceState">
            <summary>
            Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;
            </summary>
            <value>Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.MetaClub.Name">
            <summary>
            The club&#x27;s name.
            </summary>
            <value>The club&#x27;s name.</value>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.#ctor(System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.SummaryClub.SportTypeEnum},System.Collections.Generic.List{IO.Swagger.Model.ActivityType},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummaryClub"/> class.
            </summary>
            <param name="profileMedium">URL to a 60x60 pixel profile picture..</param>
            <param name="coverPhoto">URL to a ~1185x580 pixel cover photo..</param>
            <param name="coverPhotoSmall">URL to a ~360x176  pixel cover photo..</param>
            <param name="sportType">Deprecated. Prefer to use activity_types..</param>
            <param name="activityTypes">The activity types that count for a club. This takes precedence over sport_type..</param>
            <param name="city">The club's city..</param>
            <param name="state">The club's state or geographical region..</param>
            <param name="country">The club's country..</param>
            <param name="_private">Whether the club is private..</param>
            <param name="memberCount">The club's member count..</param>
            <param name="featured">Whether the club is featured or not..</param>
            <param name="verified">Whether the club is verified or not..</param>
            <param name="url">The club's vanity URL..</param>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.Equals(IO.Swagger.Model.SummaryClub)">
            <summary>
            Returns true if SummaryClub instances are equal
            </summary>
            <param name="input">Instance of SummaryClub to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryClub.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.SportType">
            <summary>
            Deprecated. Prefer to use activity_types.
            </summary>
            <value>Deprecated. Prefer to use activity_types.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.ProfileMedium">
            <summary>
            URL to a 60x60 pixel profile picture.
            </summary>
            <value>URL to a 60x60 pixel profile picture.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.CoverPhoto">
            <summary>
            URL to a ~1185x580 pixel cover photo.
            </summary>
            <value>URL to a ~1185x580 pixel cover photo.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.CoverPhotoSmall">
            <summary>
            URL to a ~360x176  pixel cover photo.
            </summary>
            <value>URL to a ~360x176  pixel cover photo.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.ActivityTypes">
            <summary>
            The activity types that count for a club. This takes precedence over sport_type.
            </summary>
            <value>The activity types that count for a club. This takes precedence over sport_type.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.City">
            <summary>
            The club&#x27;s city.
            </summary>
            <value>The club&#x27;s city.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.State">
            <summary>
            The club&#x27;s state or geographical region.
            </summary>
            <value>The club&#x27;s state or geographical region.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.Country">
            <summary>
            The club&#x27;s country.
            </summary>
            <value>The club&#x27;s country.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub._Private">
            <summary>
            Whether the club is private.
            </summary>
            <value>Whether the club is private.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.MemberCount">
            <summary>
            The club&#x27;s member count.
            </summary>
            <value>The club&#x27;s member count.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.Featured">
            <summary>
            Whether the club is featured or not.
            </summary>
            <value>Whether the club is featured or not.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.Verified">
            <summary>
            Whether the club is verified or not.
            </summary>
            <value>Whether the club is verified or not.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryClub.Url">
            <summary>
            The club&#x27;s vanity URL.
            </summary>
            <value>The club&#x27;s vanity URL.</value>
        </member>
        <member name="T:IO.Swagger.Model.SummaryClub.SportTypeEnum">
            <summary>
            Deprecated. Prefer to use activity_types.
            </summary>
            <value>Deprecated. Prefer to use activity_types.</value>
        </member>
        <member name="F:IO.Swagger.Model.SummaryClub.SportTypeEnum.Cycling">
            <summary>
            Enum Cycling for value: cycling
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SummaryClub.SportTypeEnum.Running">
            <summary>
            Enum Running for value: running
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SummaryClub.SportTypeEnum.Triathlon">
            <summary>
            Enum Triathlon for value: triathlon
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SummaryClub.SportTypeEnum.Other">
            <summary>
            Enum Other for value: other
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.#ctor(System.Nullable{IO.Swagger.Model.DetailedClub.MembershipEnum},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.SummaryClub.SportTypeEnum},System.Collections.Generic.List{IO.Swagger.Model.ActivityType},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DetailedClub"/> class.
            </summary>
            <param name="membership">The membership status of the logged-in athlete..</param>
            <param name="admin">Whether the currently logged-in athlete is an administrator of this club..</param>
            <param name="owner">Whether the currently logged-in athlete is the owner of this club..</param>
            <param name="followingCount">The number of athletes in the club that the logged-in athlete follows..</param>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.Equals(IO.Swagger.Model.DetailedClub)">
            <summary>
            Returns true if DetailedClub instances are equal
            </summary>
            <param name="input">Instance of DetailedClub to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedClub.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DetailedClub.Membership">
            <summary>
            The membership status of the logged-in athlete.
            </summary>
            <value>The membership status of the logged-in athlete.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedClub.Admin">
            <summary>
            Whether the currently logged-in athlete is an administrator of this club.
            </summary>
            <value>Whether the currently logged-in athlete is an administrator of this club.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedClub.Owner">
            <summary>
            Whether the currently logged-in athlete is the owner of this club.
            </summary>
            <value>Whether the currently logged-in athlete is the owner of this club.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedClub.FollowingCount">
            <summary>
            The number of athletes in the club that the logged-in athlete follows.
            </summary>
            <value>The number of athletes in the club that the logged-in athlete follows.</value>
        </member>
        <member name="T:IO.Swagger.Model.DetailedClub.MembershipEnum">
            <summary>
            The membership status of the logged-in athlete.
            </summary>
            <value>The membership status of the logged-in athlete.</value>
        </member>
        <member name="F:IO.Swagger.Model.DetailedClub.MembershipEnum.Member">
            <summary>
            Enum Member for value: member
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.DetailedClub.MembershipEnum.Pending">
            <summary>
            Enum Pending for value: pending
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.DetailedGear">
            <summary>
            DetailedGear
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummaryGear">
            <summary>
            SummaryGear
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummaryGear"/> class.
            </summary>
            <param name="id">The gear's unique identifier..</param>
            <param name="resourceState">Resource state, indicates level of detail. Possible values: 2 -&gt; \"summary\", 3 -&gt; \"detail\".</param>
            <param name="primary">Whether this gear's is the owner's default one..</param>
            <param name="name">The gear's name..</param>
            <param name="distance">The distance logged with this gear..</param>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.Equals(IO.Swagger.Model.SummaryGear)">
            <summary>
            Returns true if SummaryGear instances are equal
            </summary>
            <param name="input">Instance of SummaryGear to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryGear.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummaryGear.Id">
            <summary>
            The gear&#x27;s unique identifier.
            </summary>
            <value>The gear&#x27;s unique identifier.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryGear.ResourceState">
            <summary>
            Resource state, indicates level of detail. Possible values: 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;
            </summary>
            <value>Resource state, indicates level of detail. Possible values: 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryGear.Primary">
            <summary>
            Whether this gear&#x27;s is the owner&#x27;s default one.
            </summary>
            <value>Whether this gear&#x27;s is the owner&#x27;s default one.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryGear.Name">
            <summary>
            The gear&#x27;s name.
            </summary>
            <value>The gear&#x27;s name.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryGear.Distance">
            <summary>
            The distance logged with this gear.
            </summary>
            <value>The distance logged with this gear.</value>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DetailedGear"/> class.
            </summary>
            <param name="brandName">The gear's brand name..</param>
            <param name="modelName">The gear's model name..</param>
            <param name="frameType">The gear's frame type (bike only)..</param>
            <param name="description">The gear's description..</param>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.Equals(IO.Swagger.Model.DetailedGear)">
            <summary>
            Returns true if DetailedGear instances are equal
            </summary>
            <param name="input">Instance of DetailedGear to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedGear.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DetailedGear.BrandName">
            <summary>
            The gear&#x27;s brand name.
            </summary>
            <value>The gear&#x27;s brand name.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedGear.ModelName">
            <summary>
            The gear&#x27;s model name.
            </summary>
            <value>The gear&#x27;s model name.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedGear.FrameType">
            <summary>
            The gear&#x27;s frame type (bike only).
            </summary>
            <value>The gear&#x27;s frame type (bike only).</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedGear.Description">
            <summary>
            The gear&#x27;s description.
            </summary>
            <value>The gear&#x27;s description.</value>
        </member>
        <member name="T:IO.Swagger.Model.DetailedSegment">
            <summary>
            DetailedSegment
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummarySegment">
            <summary>
            SummarySegment
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.#ctor(System.Nullable{System.Int64},System.String,System.Nullable{IO.Swagger.Model.SummarySegment.ActivityTypeEnum},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},IO.Swagger.Model.LatLng,IO.Swagger.Model.LatLng,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},IO.Swagger.Model.SummaryPRSegmentEffort,IO.Swagger.Model.SummarySegmentEffort)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummarySegment"/> class.
            </summary>
            <param name="id">The unique identifier of this segment.</param>
            <param name="name">The name of this segment.</param>
            <param name="activityType">activityType.</param>
            <param name="distance">The segment's distance, in meters.</param>
            <param name="averageGrade">The segment's average grade, in percents.</param>
            <param name="maximumGrade">The segments's maximum grade, in percents.</param>
            <param name="elevationHigh">The segments's highest elevation, in meters.</param>
            <param name="elevationLow">The segments's lowest elevation, in meters.</param>
            <param name="startLatlng">startLatlng.</param>
            <param name="endLatlng">endLatlng.</param>
            <param name="climbCategory">The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category..</param>
            <param name="city">The segments's city..</param>
            <param name="state">The segments's state or geographical region..</param>
            <param name="country">The segment's country..</param>
            <param name="_private">Whether this segment is private..</param>
            <param name="athletePrEffort">athletePrEffort.</param>
            <param name="athleteSegmentStats">athleteSegmentStats.</param>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.Equals(IO.Swagger.Model.SummarySegment)">
            <summary>
            Returns true if SummarySegment instances are equal
            </summary>
            <param name="input">Instance of SummarySegment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegment.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.ActivityType">
            <summary>
            Gets or Sets ActivityType
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.Id">
            <summary>
            The unique identifier of this segment
            </summary>
            <value>The unique identifier of this segment</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.Name">
            <summary>
            The name of this segment
            </summary>
            <value>The name of this segment</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.Distance">
            <summary>
            The segment&#x27;s distance, in meters
            </summary>
            <value>The segment&#x27;s distance, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.AverageGrade">
            <summary>
            The segment&#x27;s average grade, in percents
            </summary>
            <value>The segment&#x27;s average grade, in percents</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.MaximumGrade">
            <summary>
            The segments&#x27;s maximum grade, in percents
            </summary>
            <value>The segments&#x27;s maximum grade, in percents</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.ElevationHigh">
            <summary>
            The segments&#x27;s highest elevation, in meters
            </summary>
            <value>The segments&#x27;s highest elevation, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.ElevationLow">
            <summary>
            The segments&#x27;s lowest elevation, in meters
            </summary>
            <value>The segments&#x27;s lowest elevation, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.StartLatlng">
            <summary>
            Gets or Sets StartLatlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.EndLatlng">
            <summary>
            Gets or Sets EndLatlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.ClimbCategory">
            <summary>
            The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category.
            </summary>
            <value>The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.City">
            <summary>
            The segments&#x27;s city.
            </summary>
            <value>The segments&#x27;s city.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.State">
            <summary>
            The segments&#x27;s state or geographical region.
            </summary>
            <value>The segments&#x27;s state or geographical region.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.Country">
            <summary>
            The segment&#x27;s country.
            </summary>
            <value>The segment&#x27;s country.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment._Private">
            <summary>
            Whether this segment is private.
            </summary>
            <value>Whether this segment is private.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.AthletePrEffort">
            <summary>
            Gets or Sets AthletePrEffort
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegment.AthleteSegmentStats">
            <summary>
            Gets or Sets AthleteSegmentStats
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummarySegment.ActivityTypeEnum">
            <summary>
            Defines ActivityType
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SummarySegment.ActivityTypeEnum.Ride">
            <summary>
            Enum Ride for value: Ride
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SummarySegment.ActivityTypeEnum.Run">
            <summary>
            Enum Run for value: Run
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Single},IO.Swagger.Model.PolylineMap,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.Nullable{IO.Swagger.Model.SummarySegment.ActivityTypeEnum},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},IO.Swagger.Model.LatLng,IO.Swagger.Model.LatLng,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},IO.Swagger.Model.SummaryPRSegmentEffort,IO.Swagger.Model.SummarySegmentEffort)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DetailedSegment"/> class.
            </summary>
            <param name="createdAt">The time at which the segment was created..</param>
            <param name="updatedAt">The time at which the segment was last updated..</param>
            <param name="totalElevationGain">The segment's total elevation gain..</param>
            <param name="map">map.</param>
            <param name="effortCount">The total number of efforts for this segment.</param>
            <param name="athleteCount">The number of unique athletes who have an effort for this segment.</param>
            <param name="hazardous">Whether this segment is considered hazardous.</param>
            <param name="starCount">The number of stars for this segment.</param>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.Equals(IO.Swagger.Model.DetailedSegment)">
            <summary>
            Returns true if DetailedSegment instances are equal
            </summary>
            <param name="input">Instance of DetailedSegment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegment.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.CreatedAt">
            <summary>
            The time at which the segment was created.
            </summary>
            <value>The time at which the segment was created.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.UpdatedAt">
            <summary>
            The time at which the segment was last updated.
            </summary>
            <value>The time at which the segment was last updated.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.TotalElevationGain">
            <summary>
            The segment&#x27;s total elevation gain.
            </summary>
            <value>The segment&#x27;s total elevation gain.</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.Map">
            <summary>
            Gets or Sets Map
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.EffortCount">
            <summary>
            The total number of efforts for this segment
            </summary>
            <value>The total number of efforts for this segment</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.AthleteCount">
            <summary>
            The number of unique athletes who have an effort for this segment
            </summary>
            <value>The number of unique athletes who have an effort for this segment</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.Hazardous">
            <summary>
            Whether this segment is considered hazardous
            </summary>
            <value>Whether this segment is considered hazardous</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegment.StarCount">
            <summary>
            The number of stars for this segment
            </summary>
            <value>The number of stars for this segment</value>
        </member>
        <member name="T:IO.Swagger.Model.DetailedSegmentEffort">
            <summary>
            DetailedSegmentEffort
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummarySegmentEffort">
            <summary>
            SummarySegmentEffort
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Single},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummarySegmentEffort"/> class.
            </summary>
            <param name="id">The unique identifier of this effort.</param>
            <param name="activityId">The unique identifier of the activity related to this effort.</param>
            <param name="elapsedTime">The effort's elapsed time.</param>
            <param name="startDate">The time at which the effort was started..</param>
            <param name="startDateLocal">The time at which the effort was started in the local timezone..</param>
            <param name="distance">The effort's distance in meters.</param>
            <param name="isKom">Whether this effort is the current best on the leaderboard.</param>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.Equals(IO.Swagger.Model.SummarySegmentEffort)">
            <summary>
            Returns true if SummarySegmentEffort instances are equal
            </summary>
            <param name="input">Instance of SummarySegmentEffort to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummarySegmentEffort.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.Id">
            <summary>
            The unique identifier of this effort
            </summary>
            <value>The unique identifier of this effort</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.ActivityId">
            <summary>
            The unique identifier of the activity related to this effort
            </summary>
            <value>The unique identifier of the activity related to this effort</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.ElapsedTime">
            <summary>
            The effort&#x27;s elapsed time
            </summary>
            <value>The effort&#x27;s elapsed time</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.StartDate">
            <summary>
            The time at which the effort was started.
            </summary>
            <value>The time at which the effort was started.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.StartDateLocal">
            <summary>
            The time at which the effort was started in the local timezone.
            </summary>
            <value>The time at which the effort was started in the local timezone.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.Distance">
            <summary>
            The effort&#x27;s distance in meters
            </summary>
            <value>The effort&#x27;s distance in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.SummarySegmentEffort.IsKom">
            <summary>
            Whether this effort is the current best on the leaderboard
            </summary>
            <value>Whether this effort is the current best on the leaderboard</value>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.#ctor(System.String,IO.Swagger.Model.MetaActivity,IO.Swagger.Model.MetaAthlete,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Single},IO.Swagger.Model.SummarySegment,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Single},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DetailedSegmentEffort"/> class.
            </summary>
            <param name="name">The name of the segment on which this effort was performed.</param>
            <param name="activity">activity.</param>
            <param name="athlete">athlete.</param>
            <param name="movingTime">The effort's moving time.</param>
            <param name="startIndex">The start index of this effort in its activity's stream.</param>
            <param name="endIndex">The end index of this effort in its activity's stream.</param>
            <param name="averageCadence">The effort's average cadence.</param>
            <param name="averageWatts">The average wattage of this effort.</param>
            <param name="deviceWatts">For riding efforts, whether the wattage was reported by a dedicated recording device.</param>
            <param name="averageHeartrate">The heart heart rate of the athlete during this effort.</param>
            <param name="maxHeartrate">The maximum heart rate of the athlete during this effort.</param>
            <param name="segment">segment.</param>
            <param name="komRank">The rank of the effort on the global leaderboard if it belongs in the top 10 at the time of upload.</param>
            <param name="prRank">The rank of the effort on the athlete's leaderboard if it belongs in the top 3 at the time of upload.</param>
            <param name="hidden">Whether this effort should be hidden when viewed within an activity.</param>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.Equals(IO.Swagger.Model.DetailedSegmentEffort)">
            <summary>
            Returns true if DetailedSegmentEffort instances are equal
            </summary>
            <param name="input">Instance of DetailedSegmentEffort to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DetailedSegmentEffort.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.Name">
            <summary>
            The name of the segment on which this effort was performed
            </summary>
            <value>The name of the segment on which this effort was performed</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.Activity">
            <summary>
            Gets or Sets Activity
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.Athlete">
            <summary>
            Gets or Sets Athlete
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.MovingTime">
            <summary>
            The effort&#x27;s moving time
            </summary>
            <value>The effort&#x27;s moving time</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.StartIndex">
            <summary>
            The start index of this effort in its activity&#x27;s stream
            </summary>
            <value>The start index of this effort in its activity&#x27;s stream</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.EndIndex">
            <summary>
            The end index of this effort in its activity&#x27;s stream
            </summary>
            <value>The end index of this effort in its activity&#x27;s stream</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.AverageCadence">
            <summary>
            The effort&#x27;s average cadence
            </summary>
            <value>The effort&#x27;s average cadence</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.AverageWatts">
            <summary>
            The average wattage of this effort
            </summary>
            <value>The average wattage of this effort</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.DeviceWatts">
            <summary>
            For riding efforts, whether the wattage was reported by a dedicated recording device
            </summary>
            <value>For riding efforts, whether the wattage was reported by a dedicated recording device</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.AverageHeartrate">
            <summary>
            The heart heart rate of the athlete during this effort
            </summary>
            <value>The heart heart rate of the athlete during this effort</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.MaxHeartrate">
            <summary>
            The maximum heart rate of the athlete during this effort
            </summary>
            <value>The maximum heart rate of the athlete during this effort</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.Segment">
            <summary>
            Gets or Sets Segment
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.KomRank">
            <summary>
            The rank of the effort on the global leaderboard if it belongs in the top 10 at the time of upload
            </summary>
            <value>The rank of the effort on the global leaderboard if it belongs in the top 10 at the time of upload</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.PrRank">
            <summary>
            The rank of the effort on the athlete&#x27;s leaderboard if it belongs in the top 3 at the time of upload
            </summary>
            <value>The rank of the effort on the athlete&#x27;s leaderboard if it belongs in the top 3 at the time of upload</value>
        </member>
        <member name="P:IO.Swagger.Model.DetailedSegmentEffort.Hidden">
            <summary>
            Whether this effort should be hidden when viewed within an activity
            </summary>
            <value>Whether this effort should be hidden when viewed within an activity</value>
        </member>
        <member name="T:IO.Swagger.Model.DistanceStream">
            <summary>
            DistanceStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Single}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DistanceStream"/> class.
            </summary>
            <param name="data">The sequence of distance values for this stream, in meters.</param>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.Equals(IO.Swagger.Model.DistanceStream)">
            <summary>
            Returns true if DistanceStream instances are equal
            </summary>
            <param name="input">Instance of DistanceStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DistanceStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DistanceStream.Data">
            <summary>
            The sequence of distance values for this stream, in meters
            </summary>
            <value>The sequence of distance values for this stream, in meters</value>
        </member>
        <member name="T:IO.Swagger.Model.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error"/> class.
            </summary>
            <param name="code">The code associated with this error..</param>
            <param name="field">The specific field or aspect of the resource associated with this error..</param>
            <param name="resource">The type of resource associated with this error..</param>
        </member>
        <member name="M:IO.Swagger.Model.Error.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.Equals(IO.Swagger.Model.Error)">
            <summary>
            Returns true if Error instances are equal
            </summary>
            <param name="input">Instance of Error to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error.Code">
            <summary>
            The code associated with this error.
            </summary>
            <value>The code associated with this error.</value>
        </member>
        <member name="P:IO.Swagger.Model.Error.Field">
            <summary>
            The specific field or aspect of the resource associated with this error.
            </summary>
            <value>The specific field or aspect of the resource associated with this error.</value>
        </member>
        <member name="P:IO.Swagger.Model.Error.Resource">
            <summary>
            The type of resource associated with this error.
            </summary>
            <value>The type of resource associated with this error.</value>
        </member>
        <member name="T:IO.Swagger.Model.ExplorerResponse">
            <summary>
            ExplorerResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ExplorerSegment})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExplorerResponse"/> class.
            </summary>
            <param name="segments">The set of segments matching an explorer request.</param>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.Equals(IO.Swagger.Model.ExplorerResponse)">
            <summary>
            Returns true if ExplorerResponse instances are equal
            </summary>
            <param name="input">Instance of ExplorerResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerResponse.Segments">
            <summary>
            The set of segments matching an explorer request
            </summary>
            <value>The set of segments matching an explorer request</value>
        </member>
        <member name="T:IO.Swagger.Model.ExplorerSegment">
            <summary>
            ExplorerSegment
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.#ctor(System.Nullable{System.Int64},System.String,System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum},System.Nullable{System.Single},IO.Swagger.Model.LatLng,IO.Swagger.Model.LatLng,System.Nullable{System.Single},System.Nullable{System.Single},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExplorerSegment"/> class.
            </summary>
            <param name="id">The unique identifier of this segment.</param>
            <param name="name">The name of this segment.</param>
            <param name="climbCategory">The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category. If climb_category = 5, climb_category_desc = HC. If climb_category = 2, climb_category_desc = 3..</param>
            <param name="climbCategoryDesc">The description for the category of the climb.</param>
            <param name="avgGrade">The segment's average grade, in percents.</param>
            <param name="startLatlng">startLatlng.</param>
            <param name="endLatlng">endLatlng.</param>
            <param name="elevDifference">The segments's evelation difference, in meters.</param>
            <param name="distance">The segment's distance, in meters.</param>
            <param name="points">The polyline of the segment.</param>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.Equals(IO.Swagger.Model.ExplorerSegment)">
            <summary>
            Returns true if ExplorerSegment instances are equal
            </summary>
            <param name="input">Instance of ExplorerSegment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ExplorerSegment.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDesc">
            <summary>
            The description for the category of the climb
            </summary>
            <value>The description for the category of the climb</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.Id">
            <summary>
            The unique identifier of this segment
            </summary>
            <value>The unique identifier of this segment</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.Name">
            <summary>
            The name of this segment
            </summary>
            <value>The name of this segment</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.ClimbCategory">
            <summary>
            The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category. If climb_category &#x3D; 5, climb_category_desc &#x3D; HC. If climb_category &#x3D; 2, climb_category_desc &#x3D; 3.
            </summary>
            <value>The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category. If climb_category &#x3D; 5, climb_category_desc &#x3D; HC. If climb_category &#x3D; 2, climb_category_desc &#x3D; 3.</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.AvgGrade">
            <summary>
            The segment&#x27;s average grade, in percents
            </summary>
            <value>The segment&#x27;s average grade, in percents</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.StartLatlng">
            <summary>
            Gets or Sets StartLatlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.EndLatlng">
            <summary>
            Gets or Sets EndLatlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.ElevDifference">
            <summary>
            The segments&#x27;s evelation difference, in meters
            </summary>
            <value>The segments&#x27;s evelation difference, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.Distance">
            <summary>
            The segment&#x27;s distance, in meters
            </summary>
            <value>The segment&#x27;s distance, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.ExplorerSegment.Points">
            <summary>
            The polyline of the segment
            </summary>
            <value>The polyline of the segment</value>
        </member>
        <member name="T:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum">
            <summary>
            The description for the category of the climb
            </summary>
            <value>The description for the category of the climb</value>
        </member>
        <member name="F:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum.NC">
            <summary>
            Enum NC for value: NC
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum._4">
            <summary>
            Enum _4 for value: 4
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum._3">
            <summary>
            Enum _3 for value: 3
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum._2">
            <summary>
            Enum _2 for value: 2
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum._1">
            <summary>
            Enum _1 for value: 1
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ExplorerSegment.ClimbCategoryDescEnum.HC">
            <summary>
            Enum HC for value: HC
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Fault">
            <summary>
            Encapsulates the errors that may be returned from the API.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Fault.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Error},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Fault"/> class.
            </summary>
            <param name="errors">The set of specific errors associated with this fault, if any..</param>
            <param name="message">The message of the fault..</param>
        </member>
        <member name="M:IO.Swagger.Model.Fault.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Fault.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Fault.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Fault.Equals(IO.Swagger.Model.Fault)">
            <summary>
            Returns true if Fault instances are equal
            </summary>
            <param name="input">Instance of Fault to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Fault.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Fault.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Fault.Errors">
            <summary>
            The set of specific errors associated with this fault, if any.
            </summary>
            <value>The set of specific errors associated with this fault, if any.</value>
        </member>
        <member name="P:IO.Swagger.Model.Fault.Message">
            <summary>
            The message of the fault.
            </summary>
            <value>The message of the fault.</value>
        </member>
        <member name="T:IO.Swagger.Model.HeartrateStream">
            <summary>
            HeartrateStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.HeartrateStream"/> class.
            </summary>
            <param name="data">The sequence of heart rate values for this stream, in beats per minute.</param>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.Equals(IO.Swagger.Model.HeartrateStream)">
            <summary>
            Returns true if HeartrateStream instances are equal
            </summary>
            <param name="input">Instance of HeartrateStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartrateStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.HeartrateStream.Data">
            <summary>
            The sequence of heart rate values for this stream, in beats per minute
            </summary>
            <value>The sequence of heart rate values for this stream, in beats per minute</value>
        </member>
        <member name="T:IO.Swagger.Model.HeartRateZoneRanges">
            <summary>
            HeartRateZoneRanges
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.#ctor(System.Nullable{System.Boolean},IO.Swagger.Model.ZoneRanges)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.HeartRateZoneRanges"/> class.
            </summary>
            <param name="customZones">Whether the athlete has set their own custom heart rate zones.</param>
            <param name="zones">zones.</param>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.Equals(IO.Swagger.Model.HeartRateZoneRanges)">
            <summary>
            Returns true if HeartRateZoneRanges instances are equal
            </summary>
            <param name="input">Instance of HeartRateZoneRanges to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.HeartRateZoneRanges.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.HeartRateZoneRanges.CustomZones">
            <summary>
            Whether the athlete has set their own custom heart rate zones
            </summary>
            <value>Whether the athlete has set their own custom heart rate zones</value>
        </member>
        <member name="P:IO.Swagger.Model.HeartRateZoneRanges.Zones">
            <summary>
            Gets or Sets Zones
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.IdStarredBody">
            <summary>
            IdStarredBody
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdStarredBody"/> class.
            </summary>
            <param name="starred">If true, star the segment; if false, unstar the segment. (required) (default to false).</param>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.Equals(IO.Swagger.Model.IdStarredBody)">
            <summary>
            Returns true if IdStarredBody instances are equal
            </summary>
            <param name="input">Instance of IdStarredBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.IdStarredBody.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.IdStarredBody.Starred">
            <summary>
            If true, star the segment; if false, unstar the segment.
            </summary>
            <value>If true, star the segment; if false, unstar the segment.</value>
        </member>
        <member name="T:IO.Swagger.Model.Lap">
            <summary>
            Lap
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Lap.#ctor(System.Nullable{System.Int64},IO.Swagger.Model.MetaActivity,IO.Swagger.Model.MetaAthlete,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Lap"/> class.
            </summary>
            <param name="id">The unique identifier of this lap.</param>
            <param name="activity">activity.</param>
            <param name="athlete">athlete.</param>
            <param name="averageCadence">The lap's average cadence.</param>
            <param name="averageSpeed">The lap's average speed.</param>
            <param name="distance">The lap's distance, in meters.</param>
            <param name="elapsedTime">The lap's elapsed time, in seconds.</param>
            <param name="startIndex">The start index of this effort in its activity's stream.</param>
            <param name="endIndex">The end index of this effort in its activity's stream.</param>
            <param name="lapIndex">The index of this lap in the activity it belongs to.</param>
            <param name="maxSpeed">The maximum speed of this lat, in meters per second.</param>
            <param name="movingTime">The lap's moving time, in seconds.</param>
            <param name="name">The name of the lap.</param>
            <param name="paceZone">The athlete's pace zone during this lap.</param>
            <param name="split">split.</param>
            <param name="startDate">The time at which the lap was started..</param>
            <param name="startDateLocal">The time at which the lap was started in the local timezone..</param>
            <param name="totalElevationGain">The elevation gain of this lap, in meters.</param>
        </member>
        <member name="M:IO.Swagger.Model.Lap.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Lap.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Lap.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Lap.Equals(IO.Swagger.Model.Lap)">
            <summary>
            Returns true if Lap instances are equal
            </summary>
            <param name="input">Instance of Lap to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Lap.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Lap.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Lap.Id">
            <summary>
            The unique identifier of this lap
            </summary>
            <value>The unique identifier of this lap</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.Activity">
            <summary>
            Gets or Sets Activity
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Lap.Athlete">
            <summary>
            Gets or Sets Athlete
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Lap.AverageCadence">
            <summary>
            The lap&#x27;s average cadence
            </summary>
            <value>The lap&#x27;s average cadence</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.AverageSpeed">
            <summary>
            The lap&#x27;s average speed
            </summary>
            <value>The lap&#x27;s average speed</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.Distance">
            <summary>
            The lap&#x27;s distance, in meters
            </summary>
            <value>The lap&#x27;s distance, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.ElapsedTime">
            <summary>
            The lap&#x27;s elapsed time, in seconds
            </summary>
            <value>The lap&#x27;s elapsed time, in seconds</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.StartIndex">
            <summary>
            The start index of this effort in its activity&#x27;s stream
            </summary>
            <value>The start index of this effort in its activity&#x27;s stream</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.EndIndex">
            <summary>
            The end index of this effort in its activity&#x27;s stream
            </summary>
            <value>The end index of this effort in its activity&#x27;s stream</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.LapIndex">
            <summary>
            The index of this lap in the activity it belongs to
            </summary>
            <value>The index of this lap in the activity it belongs to</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.MaxSpeed">
            <summary>
            The maximum speed of this lat, in meters per second
            </summary>
            <value>The maximum speed of this lat, in meters per second</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.MovingTime">
            <summary>
            The lap&#x27;s moving time, in seconds
            </summary>
            <value>The lap&#x27;s moving time, in seconds</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.Name">
            <summary>
            The name of the lap
            </summary>
            <value>The name of the lap</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.PaceZone">
            <summary>
            The athlete&#x27;s pace zone during this lap
            </summary>
            <value>The athlete&#x27;s pace zone during this lap</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.Split">
            <summary>
            Gets or Sets Split
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Lap.StartDate">
            <summary>
            The time at which the lap was started.
            </summary>
            <value>The time at which the lap was started.</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.StartDateLocal">
            <summary>
            The time at which the lap was started in the local timezone.
            </summary>
            <value>The time at which the lap was started in the local timezone.</value>
        </member>
        <member name="P:IO.Swagger.Model.Lap.TotalElevationGain">
            <summary>
            The elevation gain of this lap, in meters
            </summary>
            <value>The elevation gain of this lap, in meters</value>
        </member>
        <member name="T:IO.Swagger.Model.LatLng">
            <summary>
            A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.LatLng"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.Equals(IO.Swagger.Model.LatLng)">
            <summary>
            Returns true if LatLng instances are equal
            </summary>
            <param name="input">Instance of LatLng to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLng.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.LatLngStream">
            <summary>
            LatLngStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.#ctor(System.Collections.Generic.List{IO.Swagger.Model.LatLng},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.LatLngStream"/> class.
            </summary>
            <param name="data">The sequence of lat/long values for this stream.</param>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.Equals(IO.Swagger.Model.LatLngStream)">
            <summary>
            Returns true if LatLngStream instances are equal
            </summary>
            <param name="input">Instance of LatLngStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.LatLngStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.LatLngStream.Data">
            <summary>
            The sequence of lat/long values for this stream
            </summary>
            <value>The sequence of lat/long values for this stream</value>
        </member>
        <member name="T:IO.Swagger.Model.MovingStream">
            <summary>
            MovingStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Boolean}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MovingStream"/> class.
            </summary>
            <param name="data">The sequence of moving values for this stream, as boolean values.</param>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.Equals(IO.Swagger.Model.MovingStream)">
            <summary>
            Returns true if MovingStream instances are equal
            </summary>
            <param name="input">Instance of MovingStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MovingStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MovingStream.Data">
            <summary>
            The sequence of moving values for this stream, as boolean values
            </summary>
            <value>The sequence of moving values for this stream, as boolean values</value>
        </member>
        <member name="T:IO.Swagger.Model.PhotosSummary">
            <summary>
            PhotosSummary
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.PhotosSummaryPrimary)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PhotosSummary"/> class.
            </summary>
            <param name="count">The number of photos.</param>
            <param name="primary">primary.</param>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.Equals(IO.Swagger.Model.PhotosSummary)">
            <summary>
            Returns true if PhotosSummary instances are equal
            </summary>
            <param name="input">Instance of PhotosSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummary.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PhotosSummary.Count">
            <summary>
            The number of photos
            </summary>
            <value>The number of photos</value>
        </member>
        <member name="P:IO.Swagger.Model.PhotosSummary.Primary">
            <summary>
            Gets or Sets Primary
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.PhotosSummaryPrimary">
            <summary>
            PhotosSummaryPrimary
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PhotosSummaryPrimary"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="source">source.</param>
            <param name="uniqueId">uniqueId.</param>
            <param name="urls">urls.</param>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.Equals(IO.Swagger.Model.PhotosSummaryPrimary)">
            <summary>
            Returns true if PhotosSummaryPrimary instances are equal
            </summary>
            <param name="input">Instance of PhotosSummaryPrimary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PhotosSummaryPrimary.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PhotosSummaryPrimary.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.PhotosSummaryPrimary.Source">
            <summary>
            Gets or Sets Source
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.PhotosSummaryPrimary.UniqueId">
            <summary>
            Gets or Sets UniqueId
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.PhotosSummaryPrimary.Urls">
            <summary>
            Gets or Sets Urls
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.PolylineMap">
            <summary>
            PolylineMap
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PolylineMap"/> class.
            </summary>
            <param name="id">The identifier of the map.</param>
            <param name="polyline">The polyline of the map, only returned on detailed representation of an object.</param>
            <param name="summaryPolyline">The summary polyline of the map.</param>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.Equals(IO.Swagger.Model.PolylineMap)">
            <summary>
            Returns true if PolylineMap instances are equal
            </summary>
            <param name="input">Instance of PolylineMap to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PolylineMap.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PolylineMap.Id">
            <summary>
            The identifier of the map
            </summary>
            <value>The identifier of the map</value>
        </member>
        <member name="P:IO.Swagger.Model.PolylineMap.Polyline">
            <summary>
            The polyline of the map, only returned on detailed representation of an object
            </summary>
            <value>The polyline of the map, only returned on detailed representation of an object</value>
        </member>
        <member name="P:IO.Swagger.Model.PolylineMap.SummaryPolyline">
            <summary>
            The summary polyline of the map
            </summary>
            <value>The summary polyline of the map</value>
        </member>
        <member name="T:IO.Swagger.Model.PowerStream">
            <summary>
            PowerStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PowerStream"/> class.
            </summary>
            <param name="data">The sequence of power values for this stream, in watts.</param>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.Equals(IO.Swagger.Model.PowerStream)">
            <summary>
            Returns true if PowerStream instances are equal
            </summary>
            <param name="input">Instance of PowerStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PowerStream.Data">
            <summary>
            The sequence of power values for this stream, in watts
            </summary>
            <value>The sequence of power values for this stream, in watts</value>
        </member>
        <member name="T:IO.Swagger.Model.PowerZoneRanges">
            <summary>
            PowerZoneRanges
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.#ctor(IO.Swagger.Model.ZoneRanges)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PowerZoneRanges"/> class.
            </summary>
            <param name="zones">zones.</param>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.Equals(IO.Swagger.Model.PowerZoneRanges)">
            <summary>
            Returns true if PowerZoneRanges instances are equal
            </summary>
            <param name="input">Instance of PowerZoneRanges to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PowerZoneRanges.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PowerZoneRanges.Zones">
            <summary>
            Gets or Sets Zones
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Route">
            <summary>
            Route
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Route.#ctor(IO.Swagger.Model.SummaryAthlete,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int64},System.String,IO.Swagger.Model.PolylineMap,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.SummarySegment})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Route"/> class.
            </summary>
            <param name="athlete">athlete.</param>
            <param name="description">The description of the route.</param>
            <param name="distance">The route's distance, in meters.</param>
            <param name="elevationGain">The route's elevation gain..</param>
            <param name="id">The unique identifier of this route.</param>
            <param name="idStr">The unique identifier of the route in string format.</param>
            <param name="map">map.</param>
            <param name="name">The name of this route.</param>
            <param name="_private">Whether this route is private.</param>
            <param name="starred">Whether this route is starred by the logged-in athlete.</param>
            <param name="timestamp">An epoch timestamp of when the route was created.</param>
            <param name="type">This route's type (1 for ride, 2 for runs).</param>
            <param name="subType">This route's sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed).</param>
            <param name="createdAt">The time at which the route was created.</param>
            <param name="updatedAt">The time at which the route was last updated.</param>
            <param name="estimatedMovingTime">Estimated time in seconds for the authenticated athlete to complete route.</param>
            <param name="segments">The segments traversed by this route.</param>
        </member>
        <member name="M:IO.Swagger.Model.Route.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Route.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Route.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Route.Equals(IO.Swagger.Model.Route)">
            <summary>
            Returns true if Route instances are equal
            </summary>
            <param name="input">Instance of Route to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Route.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Route.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Route.Athlete">
            <summary>
            Gets or Sets Athlete
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Route.Description">
            <summary>
            The description of the route
            </summary>
            <value>The description of the route</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Distance">
            <summary>
            The route&#x27;s distance, in meters
            </summary>
            <value>The route&#x27;s distance, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.ElevationGain">
            <summary>
            The route&#x27;s elevation gain.
            </summary>
            <value>The route&#x27;s elevation gain.</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Id">
            <summary>
            The unique identifier of this route
            </summary>
            <value>The unique identifier of this route</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.IdStr">
            <summary>
            The unique identifier of the route in string format
            </summary>
            <value>The unique identifier of the route in string format</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Map">
            <summary>
            Gets or Sets Map
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Route.Name">
            <summary>
            The name of this route
            </summary>
            <value>The name of this route</value>
        </member>
        <member name="P:IO.Swagger.Model.Route._Private">
            <summary>
            Whether this route is private
            </summary>
            <value>Whether this route is private</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Starred">
            <summary>
            Whether this route is starred by the logged-in athlete
            </summary>
            <value>Whether this route is starred by the logged-in athlete</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Timestamp">
            <summary>
            An epoch timestamp of when the route was created
            </summary>
            <value>An epoch timestamp of when the route was created</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Type">
            <summary>
            This route&#x27;s type (1 for ride, 2 for runs)
            </summary>
            <value>This route&#x27;s type (1 for ride, 2 for runs)</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.SubType">
            <summary>
            This route&#x27;s sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed)
            </summary>
            <value>This route&#x27;s sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed)</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.CreatedAt">
            <summary>
            The time at which the route was created
            </summary>
            <value>The time at which the route was created</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.UpdatedAt">
            <summary>
            The time at which the route was last updated
            </summary>
            <value>The time at which the route was last updated</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.EstimatedMovingTime">
            <summary>
            Estimated time in seconds for the authenticated athlete to complete route
            </summary>
            <value>Estimated time in seconds for the authenticated athlete to complete route</value>
        </member>
        <member name="P:IO.Swagger.Model.Route.Segments">
            <summary>
            The segments traversed by this route
            </summary>
            <value>The segments traversed by this route</value>
        </member>
        <member name="T:IO.Swagger.Model.SmoothGradeStream">
            <summary>
            SmoothGradeStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Single}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SmoothGradeStream"/> class.
            </summary>
            <param name="data">The sequence of grade values for this stream, as percents of a grade.</param>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.Equals(IO.Swagger.Model.SmoothGradeStream)">
            <summary>
            Returns true if SmoothGradeStream instances are equal
            </summary>
            <param name="input">Instance of SmoothGradeStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothGradeStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SmoothGradeStream.Data">
            <summary>
            The sequence of grade values for this stream, as percents of a grade
            </summary>
            <value>The sequence of grade values for this stream, as percents of a grade</value>
        </member>
        <member name="T:IO.Swagger.Model.SmoothVelocityStream">
            <summary>
            SmoothVelocityStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Single}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SmoothVelocityStream"/> class.
            </summary>
            <param name="data">The sequence of velocity values for this stream, in meters per second.</param>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.Equals(IO.Swagger.Model.SmoothVelocityStream)">
            <summary>
            Returns true if SmoothVelocityStream instances are equal
            </summary>
            <param name="input">Instance of SmoothVelocityStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SmoothVelocityStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SmoothVelocityStream.Data">
            <summary>
            The sequence of velocity values for this stream, in meters per second
            </summary>
            <value>The sequence of velocity values for this stream, in meters per second</value>
        </member>
        <member name="T:IO.Swagger.Model.Split">
            <summary>
            Split
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Split.#ctor(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Split"/> class.
            </summary>
            <param name="averageSpeed">The average speed of this split, in meters per second.</param>
            <param name="distance">The distance of this split, in meters.</param>
            <param name="elapsedTime">The elapsed time of this split, in seconds.</param>
            <param name="elevationDifference">The elevation difference of this split, in meters.</param>
            <param name="paceZone">The pacing zone of this split.</param>
            <param name="movingTime">The moving time of this split, in seconds.</param>
            <param name="split">N/A.</param>
        </member>
        <member name="M:IO.Swagger.Model.Split.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Split.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Split.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Split.Equals(IO.Swagger.Model.Split)">
            <summary>
            Returns true if Split instances are equal
            </summary>
            <param name="input">Instance of Split to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Split.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Split.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Split.AverageSpeed">
            <summary>
            The average speed of this split, in meters per second
            </summary>
            <value>The average speed of this split, in meters per second</value>
        </member>
        <member name="P:IO.Swagger.Model.Split.Distance">
            <summary>
            The distance of this split, in meters
            </summary>
            <value>The distance of this split, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.Split.ElapsedTime">
            <summary>
            The elapsed time of this split, in seconds
            </summary>
            <value>The elapsed time of this split, in seconds</value>
        </member>
        <member name="P:IO.Swagger.Model.Split.ElevationDifference">
            <summary>
            The elevation difference of this split, in meters
            </summary>
            <value>The elevation difference of this split, in meters</value>
        </member>
        <member name="P:IO.Swagger.Model.Split.PaceZone">
            <summary>
            The pacing zone of this split
            </summary>
            <value>The pacing zone of this split</value>
        </member>
        <member name="P:IO.Swagger.Model.Split.MovingTime">
            <summary>
            The moving time of this split, in seconds
            </summary>
            <value>The moving time of this split, in seconds</value>
        </member>
        <member name="P:IO.Swagger.Model.Split._Split">
            <summary>
            N/A
            </summary>
            <value>N/A</value>
        </member>
        <member name="T:IO.Swagger.Model.SportType">
            <summary>
            An enumeration of the sport types an activity may have. Distinct from ActivityType in that it has new types (e.g. MountainBikeRide)
            </summary>
            <value>An enumeration of the sport types an activity may have. Distinct from ActivityType in that it has new types (e.g. MountainBikeRide)</value>
        </member>
        <member name="F:IO.Swagger.Model.SportType.AlpineSki">
            <summary>
            Enum AlpineSki for value: AlpineSki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.BackcountrySki">
            <summary>
            Enum BackcountrySki for value: BackcountrySki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Canoeing">
            <summary>
            Enum Canoeing for value: Canoeing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Crossfit">
            <summary>
            Enum Crossfit for value: Crossfit
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.EBikeRide">
            <summary>
            Enum EBikeRide for value: EBikeRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Elliptical">
            <summary>
            Enum Elliptical for value: Elliptical
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.EMountainBikeRide">
            <summary>
            Enum EMountainBikeRide for value: EMountainBikeRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Golf">
            <summary>
            Enum Golf for value: Golf
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.GravelRide">
            <summary>
            Enum GravelRide for value: GravelRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Handcycle">
            <summary>
            Enum Handcycle for value: Handcycle
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Hike">
            <summary>
            Enum Hike for value: Hike
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.IceSkate">
            <summary>
            Enum IceSkate for value: IceSkate
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.InlineSkate">
            <summary>
            Enum InlineSkate for value: InlineSkate
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Kayaking">
            <summary>
            Enum Kayaking for value: Kayaking
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Kitesurf">
            <summary>
            Enum Kitesurf for value: Kitesurf
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.MountainBikeRide">
            <summary>
            Enum MountainBikeRide for value: MountainBikeRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.NordicSki">
            <summary>
            Enum NordicSki for value: NordicSki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Ride">
            <summary>
            Enum Ride for value: Ride
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.RockClimbing">
            <summary>
            Enum RockClimbing for value: RockClimbing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.RollerSki">
            <summary>
            Enum RollerSki for value: RollerSki
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Rowing">
            <summary>
            Enum Rowing for value: Rowing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Run">
            <summary>
            Enum Run for value: Run
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Sail">
            <summary>
            Enum Sail for value: Sail
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Skateboard">
            <summary>
            Enum Skateboard for value: Skateboard
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Snowboard">
            <summary>
            Enum Snowboard for value: Snowboard
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Snowshoe">
            <summary>
            Enum Snowshoe for value: Snowshoe
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Soccer">
            <summary>
            Enum Soccer for value: Soccer
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.StairStepper">
            <summary>
            Enum StairStepper for value: StairStepper
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.StandUpPaddling">
            <summary>
            Enum StandUpPaddling for value: StandUpPaddling
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Surfing">
            <summary>
            Enum Surfing for value: Surfing
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Swim">
            <summary>
            Enum Swim for value: Swim
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.TrailRun">
            <summary>
            Enum TrailRun for value: TrailRun
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Velomobile">
            <summary>
            Enum Velomobile for value: Velomobile
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.VirtualRide">
            <summary>
            Enum VirtualRide for value: VirtualRide
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.VirtualRun">
            <summary>
            Enum VirtualRun for value: VirtualRun
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Walk">
            <summary>
            Enum Walk for value: Walk
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.WeightTraining">
            <summary>
            Enum WeightTraining for value: WeightTraining
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Wheelchair">
            <summary>
            Enum Wheelchair for value: Wheelchair
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Windsurf">
            <summary>
            Enum Windsurf for value: Windsurf
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Workout">
            <summary>
            Enum Workout for value: Workout
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SportType.Yoga">
            <summary>
            Enum Yoga for value: Yoga
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.StreamSet">
            <summary>
            StreamSet
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.#ctor(IO.Swagger.Model.TimeStream,IO.Swagger.Model.DistanceStream,IO.Swagger.Model.LatLngStream,IO.Swagger.Model.AltitudeStream,IO.Swagger.Model.SmoothVelocityStream,IO.Swagger.Model.HeartrateStream,IO.Swagger.Model.CadenceStream,IO.Swagger.Model.PowerStream,IO.Swagger.Model.TemperatureStream,IO.Swagger.Model.MovingStream,IO.Swagger.Model.SmoothGradeStream)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.StreamSet"/> class.
            </summary>
            <param name="time">time.</param>
            <param name="distance">distance.</param>
            <param name="latlng">latlng.</param>
            <param name="altitude">altitude.</param>
            <param name="velocitySmooth">velocitySmooth.</param>
            <param name="heartrate">heartrate.</param>
            <param name="cadence">cadence.</param>
            <param name="watts">watts.</param>
            <param name="temp">temp.</param>
            <param name="moving">moving.</param>
            <param name="gradeSmooth">gradeSmooth.</param>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.Equals(IO.Swagger.Model.StreamSet)">
            <summary>
            Returns true if StreamSet instances are equal
            </summary>
            <param name="input">Instance of StreamSet to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.StreamSet.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Time">
            <summary>
            Gets or Sets Time
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Distance">
            <summary>
            Gets or Sets Distance
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Latlng">
            <summary>
            Gets or Sets Latlng
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Altitude">
            <summary>
            Gets or Sets Altitude
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.VelocitySmooth">
            <summary>
            Gets or Sets VelocitySmooth
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Heartrate">
            <summary>
            Gets or Sets Heartrate
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Cadence">
            <summary>
            Gets or Sets Cadence
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Watts">
            <summary>
            Gets or Sets Watts
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Temp">
            <summary>
            Gets or Sets Temp
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.Moving">
            <summary>
            Gets or Sets Moving
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.StreamSet.GradeSmooth">
            <summary>
            Gets or Sets GradeSmooth
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SummaryPRSegmentEffort">
            <summary>
            SummaryPRSegmentEffort
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SummaryPRSegmentEffort"/> class.
            </summary>
            <param name="prActivityId">The unique identifier of the activity related to the PR effort..</param>
            <param name="prElapsedTime">The elapsed time ot the PR effort..</param>
            <param name="prDate">The time at which the PR effort was started..</param>
            <param name="effortCount">Number of efforts by the authenticated athlete on this segment..</param>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.Equals(IO.Swagger.Model.SummaryPRSegmentEffort)">
            <summary>
            Returns true if SummaryPRSegmentEffort instances are equal
            </summary>
            <param name="input">Instance of SummaryPRSegmentEffort to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SummaryPRSegmentEffort.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SummaryPRSegmentEffort.PrActivityId">
            <summary>
            The unique identifier of the activity related to the PR effort.
            </summary>
            <value>The unique identifier of the activity related to the PR effort.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryPRSegmentEffort.PrElapsedTime">
            <summary>
            The elapsed time ot the PR effort.
            </summary>
            <value>The elapsed time ot the PR effort.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryPRSegmentEffort.PrDate">
            <summary>
            The time at which the PR effort was started.
            </summary>
            <value>The time at which the PR effort was started.</value>
        </member>
        <member name="P:IO.Swagger.Model.SummaryPRSegmentEffort.EffortCount">
            <summary>
            Number of efforts by the authenticated athlete on this segment.
            </summary>
            <value>Number of efforts by the authenticated athlete on this segment.</value>
        </member>
        <member name="T:IO.Swagger.Model.TemperatureStream">
            <summary>
            TemperatureStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemperatureStream"/> class.
            </summary>
            <param name="data">The sequence of temperature values for this stream, in celsius degrees.</param>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.Equals(IO.Swagger.Model.TemperatureStream)">
            <summary>
            Returns true if TemperatureStream instances are equal
            </summary>
            <param name="input">Instance of TemperatureStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.TemperatureStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.TemperatureStream.Data">
            <summary>
            The sequence of temperature values for this stream, in celsius degrees
            </summary>
            <value>The sequence of temperature values for this stream, in celsius degrees</value>
        </member>
        <member name="T:IO.Swagger.Model.TimedZoneDistribution">
            <summary>
            Stores the exclusive ranges representing zones and the time spent in each.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.TimedZoneDistribution"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.Equals(IO.Swagger.Model.TimedZoneDistribution)">
            <summary>
            Returns true if TimedZoneDistribution instances are equal
            </summary>
            <param name="input">Instance of TimedZoneDistribution to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneDistribution.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.TimedZoneRange">
            <summary>
            A union type representing the time spent in a given zone.
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ZoneRange">
            <summary>
            ZoneRange
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ZoneRange"/> class.
            </summary>
            <param name="min">The minimum value in the range..</param>
            <param name="max">The maximum value in the range..</param>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.Equals(IO.Swagger.Model.ZoneRange)">
            <summary>
            Returns true if ZoneRange instances are equal
            </summary>
            <param name="input">Instance of ZoneRange to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRange.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ZoneRange.Min">
            <summary>
            The minimum value in the range.
            </summary>
            <value>The minimum value in the range.</value>
        </member>
        <member name="P:IO.Swagger.Model.ZoneRange.Max">
            <summary>
            The maximum value in the range.
            </summary>
            <value>The maximum value in the range.</value>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.TimedZoneRange"/> class.
            </summary>
            <param name="time">The number of seconds spent in this zone.</param>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.Equals(IO.Swagger.Model.TimedZoneRange)">
            <summary>
            Returns true if TimedZoneRange instances are equal
            </summary>
            <param name="input">Instance of TimedZoneRange to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimedZoneRange.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.TimedZoneRange.Time">
            <summary>
            The number of seconds spent in this zone
            </summary>
            <value>The number of seconds spent in this zone</value>
        </member>
        <member name="T:IO.Swagger.Model.TimeStream">
            <summary>
            TimeStream
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.#ctor(System.Collections.Generic.List{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.BaseStream.ResolutionEnum},System.Nullable{IO.Swagger.Model.BaseStream.SeriesTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.TimeStream"/> class.
            </summary>
            <param name="data">The sequence of time values for this stream, in seconds.</param>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.Equals(IO.Swagger.Model.TimeStream)">
            <summary>
            Returns true if TimeStream instances are equal
            </summary>
            <param name="input">Instance of TimeStream to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.TimeStream.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.TimeStream.Data">
            <summary>
            The sequence of time values for this stream, in seconds
            </summary>
            <value>The sequence of time values for this stream, in seconds</value>
        </member>
        <member name="T:IO.Swagger.Model.UpdatableActivity">
            <summary>
            UpdatableActivity
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,IO.Swagger.Model.ActivityType,IO.Swagger.Model.SportType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdatableActivity"/> class.
            </summary>
            <param name="commute">Whether this activity is a commute.</param>
            <param name="trainer">Whether this activity was recorded on a training machine.</param>
            <param name="hideFromHome">Whether this activity is muted.</param>
            <param name="description">The description of the activity.</param>
            <param name="name">The name of the activity.</param>
            <param name="type">type.</param>
            <param name="sportType">sportType.</param>
            <param name="gearId">Identifier for the gear associated with the activity. ‘none’ clears gear from activity.</param>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.Equals(IO.Swagger.Model.UpdatableActivity)">
            <summary>
            Returns true if UpdatableActivity instances are equal
            </summary>
            <param name="input">Instance of UpdatableActivity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdatableActivity.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.Commute">
            <summary>
            Whether this activity is a commute
            </summary>
            <value>Whether this activity is a commute</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.Trainer">
            <summary>
            Whether this activity was recorded on a training machine
            </summary>
            <value>Whether this activity was recorded on a training machine</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.HideFromHome">
            <summary>
            Whether this activity is muted
            </summary>
            <value>Whether this activity is muted</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.Description">
            <summary>
            The description of the activity
            </summary>
            <value>The description of the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.Name">
            <summary>
            The name of the activity
            </summary>
            <value>The name of the activity</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.SportType">
            <summary>
            Gets or Sets SportType
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UpdatableActivity.GearId">
            <summary>
            Identifier for the gear associated with the activity. ‘none’ clears gear from activity
            </summary>
            <value>Identifier for the gear associated with the activity. ‘none’ clears gear from activity</value>
        </member>
        <member name="T:IO.Swagger.Model.Upload">
            <summary>
            Upload
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Upload.#ctor(System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Upload"/> class.
            </summary>
            <param name="id">The unique identifier of the upload.</param>
            <param name="idStr">The unique identifier of the upload in string format.</param>
            <param name="externalId">The external identifier of the upload.</param>
            <param name="error">The error associated with this upload.</param>
            <param name="status">The status of this upload.</param>
            <param name="activityId">The identifier of the activity this upload resulted into.</param>
        </member>
        <member name="M:IO.Swagger.Model.Upload.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Upload.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Upload.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Upload.Equals(IO.Swagger.Model.Upload)">
            <summary>
            Returns true if Upload instances are equal
            </summary>
            <param name="input">Instance of Upload to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Upload.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Upload.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Upload.Id">
            <summary>
            The unique identifier of the upload
            </summary>
            <value>The unique identifier of the upload</value>
        </member>
        <member name="P:IO.Swagger.Model.Upload.IdStr">
            <summary>
            The unique identifier of the upload in string format
            </summary>
            <value>The unique identifier of the upload in string format</value>
        </member>
        <member name="P:IO.Swagger.Model.Upload.ExternalId">
            <summary>
            The external identifier of the upload
            </summary>
            <value>The external identifier of the upload</value>
        </member>
        <member name="P:IO.Swagger.Model.Upload.Error">
            <summary>
            The error associated with this upload
            </summary>
            <value>The error associated with this upload</value>
        </member>
        <member name="P:IO.Swagger.Model.Upload.Status">
            <summary>
            The status of this upload
            </summary>
            <value>The status of this upload</value>
        </member>
        <member name="P:IO.Swagger.Model.Upload.ActivityId">
            <summary>
            The identifier of the activity this upload resulted into
            </summary>
            <value>The identifier of the activity this upload resulted into</value>
        </member>
        <member name="T:IO.Swagger.Model.UploadsBody">
            <summary>
            UploadsBody
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.#ctor(System.Byte[],System.String,System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.UploadsBody.DataTypeEnum},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadsBody"/> class.
            </summary>
            <param name="file">The uploaded file..</param>
            <param name="name">The desired name of the resulting activity..</param>
            <param name="description">The desired description of the resulting activity..</param>
            <param name="trainer">Whether the resulting activity should be marked as having been performed on a trainer..</param>
            <param name="commute">Whether the resulting activity should be tagged as a commute..</param>
            <param name="dataType">The format of the uploaded file..</param>
            <param name="externalId">The desired external identifier of the resulting activity..</param>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.Equals(IO.Swagger.Model.UploadsBody)">
            <summary>
            Returns true if UploadsBody instances are equal
            </summary>
            <param name="input">Instance of UploadsBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UploadsBody.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.DataType">
            <summary>
            The format of the uploaded file.
            </summary>
            <value>The format of the uploaded file.</value>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.File">
            <summary>
            The uploaded file.
            </summary>
            <value>The uploaded file.</value>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.Name">
            <summary>
            The desired name of the resulting activity.
            </summary>
            <value>The desired name of the resulting activity.</value>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.Description">
            <summary>
            The desired description of the resulting activity.
            </summary>
            <value>The desired description of the resulting activity.</value>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.Trainer">
            <summary>
            Whether the resulting activity should be marked as having been performed on a trainer.
            </summary>
            <value>Whether the resulting activity should be marked as having been performed on a trainer.</value>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.Commute">
            <summary>
            Whether the resulting activity should be tagged as a commute.
            </summary>
            <value>Whether the resulting activity should be tagged as a commute.</value>
        </member>
        <member name="P:IO.Swagger.Model.UploadsBody.ExternalId">
            <summary>
            The desired external identifier of the resulting activity.
            </summary>
            <value>The desired external identifier of the resulting activity.</value>
        </member>
        <member name="T:IO.Swagger.Model.UploadsBody.DataTypeEnum">
            <summary>
            The format of the uploaded file.
            </summary>
            <value>The format of the uploaded file.</value>
        </member>
        <member name="F:IO.Swagger.Model.UploadsBody.DataTypeEnum.Fit">
            <summary>
            Enum Fit for value: fit
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UploadsBody.DataTypeEnum.FitGz">
            <summary>
            Enum FitGz for value: fit.gz
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UploadsBody.DataTypeEnum.Tcx">
            <summary>
            Enum Tcx for value: tcx
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UploadsBody.DataTypeEnum.TcxGz">
            <summary>
            Enum TcxGz for value: tcx.gz
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UploadsBody.DataTypeEnum.Gpx">
            <summary>
            Enum Gpx for value: gpx
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UploadsBody.DataTypeEnum.GpxGz">
            <summary>
            Enum GpxGz for value: gpx.gz
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ZoneRanges">
            <summary>
            ZoneRanges
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ZoneRanges"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.Equals(IO.Swagger.Model.ZoneRanges)">
            <summary>
            Returns true if ZoneRanges instances are equal
            </summary>
            <param name="input">Instance of ZoneRanges to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ZoneRanges.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.Zones">
            <summary>
            Zones
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Zones.#ctor(IO.Swagger.Model.HeartRateZoneRanges,IO.Swagger.Model.PowerZoneRanges)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Zones"/> class.
            </summary>
            <param name="heartRate">heartRate.</param>
            <param name="power">power.</param>
        </member>
        <member name="M:IO.Swagger.Model.Zones.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Zones.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Zones.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Zones.Equals(IO.Swagger.Model.Zones)">
            <summary>
            Returns true if Zones instances are equal
            </summary>
            <param name="input">Instance of Zones to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Zones.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Zones.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Zones.HeartRate">
            <summary>
            Gets or Sets HeartRate
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Zones.Power">
            <summary>
            Gets or Sets Power
            </summary>
        </member>
    </members>
</doc>
